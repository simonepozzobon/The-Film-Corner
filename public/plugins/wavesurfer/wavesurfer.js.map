{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 450cb6648dbf9ab78169","webpack:///./src/util/index.js","webpack:///./src/webaudio.js","webpack:///./src/util/observer.js","webpack:///./src/util/request-animation-frame.js","webpack:///./src/drawer.multicanvas.js","webpack:///./src/mediaelement.js","webpack:///./src/peakcache.js","webpack:///./src/drawer.js","webpack:///./src/util/ajax.js","webpack:///./src/util/extend.js","webpack:///./src/util/frame.js","webpack:///./src/util/get-id.js","webpack:///./src/util/max.js","webpack:///./src/util/min.js","webpack:///./src/util/style.js","webpack:///./src/wavesurfer.js","webpack:///./~/debounce/index.js"],"names":["default","util","PLAYING","PAUSED","FINISHED","WebAudio","window","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","params","audioContext","offlineAudioContext","stateBehaviors","init","addOnAudioProcess","getPlayedPercents","duration","getDuration","getCurrentTime","startPosition","getPlayedTime","removeOnAudioProcess","fireEvent","ac","getAudioContext","lastPlay","currentTime","scheduledPause","states","Object","create","analyser","buffer","filters","gainNode","mergedPeaks","offlineAc","peaks","playbackRate","scriptNode","source","splitPeaks","state","createVolumeNode","createScriptNode","createAnalyserNode","setState","setPlaybackRate","audioRate","setLength","forEach","filter","disconnect","connect","call","setFilters","disconnectFilters","length","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","time","pause","createAnalyser","createGain","createGainNode","value","gain","arraybuffer","callback","errback","getOfflineAudioContext","decodeAudioData","data","channels","numberOfChannels","c","first","last","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","i","start","end","min","max","j","splitChannels","isPaused","unAll","disconnectSource","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","stop","noteOff","adjustedTime","seekTo","resume","play","Observer","handlers","event","fn","push","name","un","e","splice","handler","args","apply","setTimeout","on","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","bind","MultiCanvas","container","maxCanvasWidth","maxCanvasElementWidth","Math","round","pixelRatio","hasProgressCanvas","waveColor","progressColor","halfPixel","canvases","progressWave","createWrapper","createElements","wrapper","appendChild","style","document","createElement","position","zIndex","left","top","bottom","overflow","width","display","boxSizing","borderRightStyle","borderRightWidth","cursorWidth","borderRightColor","cursorColor","pointerEvents","addCanvas","totalWidth","requiredCanvases","ceil","removeCanvas","entry","canvasWidth","updateDimensions","height","clearWaveForEntry","leftOffset","wave","waveCtx","getContext","progress","progressCtx","lastEntry","pop","parentElement","removeChild","elementWidth","canvas","offsetLeft","clearRect","channelIndex","frame","Array","setHeight","channelPeaks","drawBars","hasMinVals","some","val","peakIndexScale","offsetY","halfH","bar","barWidth","gap","step","absmax","normalize","scale","peak","floor","h","fillRect","drawWave","hasMinValues","reflectedPeaks","len","drawLine","setFillStyles","drawLineToContext","ctx","fillParent","canvasStart","canvasEnd","beginPath","moveTo","lineTo","closePath","fill","x","y","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRectToContext","fillStyle","type","quality","images","map","toDataURL","MediaElement","media","paused","mediaType","toLowerCase","elementPosition","onPlayEnd","createTimer","onAudioProcess","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","load","addEventListener","Infinity","seekable","clearPlayEnd","setPlayEnd","_onPlayEnd","volume","parentNode","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","pos","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","Drawer","lastPos","el","styles","userSelect","webkitUserSelect","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","scrollLeft","scrollWidth","scrollbarHeight","offsetHeight","clientHeight","clientY","interact","handleEvent","setWidth","clearWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","updateSize","minPxDelta","autoCenter","newPos","updateProgress","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","lengthComputable","loaded","total","status","response","send","extend","dest","sources","keys","key","func","getId","random","toString","substring","values","largest","smallest","Number","prop","PluginClass","ws","WaveSurfer","wavesurfer","defaultParams","backend","dragSelection","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","Error","savedVolume","isMuted","tmpEvents","currentAjax","drawer","peakCache","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","empty","drawBuffer","registerPlugins","createDrawer","createBackend","createPeakCache","addPlugin","plugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","prototype","destroyPlugin","destroy","supportsWebAudio","seconds","skip","seekAndCenter","recenter","oldScrollParent","newVolume","setVolume","getVolume","getPlaybackRate","setMute","mute","getScrollX","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","loadDecodedBuffer","blob","reader","FileReader","onProgress","loadArrayBuffer","result","readAsArrayBuffer","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","statusText","percentComplete","accuracy","noWindow","json","JSON","stringify","encodeURIComponent","format","getImage","abort","cancelAjax","clearTmpEvents","destroyAllPlugins","removeEventListener"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;yCChESA,O;;;;;;;;;0CACAA,O;;;;;;;;;wCACAA,O;;;;;;;;;wCACAA,O;;;;;;;;;6CACAA,O;;;;;;;;;2CACAA,O;;;;;;;;;0CACAA,O;;;;;;;;;0DACAA,O;;;;;;;;;0CACAA,O;;;;;;;;;6CACAA,O;;;;;;;;;;;;;;;;;;;ACTT;;IAAYC,I;;;;;;;;;;;;AAEZ;AACA,IAAMC,UAAU,SAAhB;AACA,IAAMC,SAAS,QAAf;AACA,IAAMC,WAAW,UAAjB;;AAEA;;;;;;IAKqBC,Q;;;;;;;AA+CjB;;;;;;AA1CA;;AAJA;2CAmDmB;AACf,mBAAO,CAAC,EAAEC,OAAOC,YAAP,IAAuBD,OAAOE,kBAAhC,CAAR;AACH;;AAED;;;;;;AAjDA;;AAJA;;;;0CA0DkB;AACd,gBAAI,CAACF,OAAOG,sBAAZ,EAAoC;AAChCH,uBAAOG,sBAAP,GAAgC,KAC5BH,OAAOC,YAAP,IAAuBD,OAAOE,kBADF,GAAhC;AAGH;AACD,mBAAOF,OAAOG,sBAAd;AACH;;AAED;;;;;;;;;+CAMuBC,U,EAAY;AAC/B,gBAAI,CAACJ,OAAOK,6BAAZ,EAA2C;AACvCL,uBAAOK,6BAAP,GAAuC,KACnCL,OAAOM,mBAAP,IAA8BN,OAAOO,yBADF,EAErC,CAFqC,EAElC,CAFkC,EAE/BH,UAF+B,CAAvC;AAGH;AACD,mBAAOJ,OAAOK,6BAAd;AACH;;AAED;;;;;;;;AAKA,sBAAYG,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB;AAFgB;;AAAA,cAtFpBC,YAsFoB,GAtFL,IAsFK;AAAA,cApFpBC,mBAoFoB,GApFE,IAoFF;AAAA,cAlFpBC,cAkFoB,qEAjFff,OAiFe,EAjFL;AACPgB,gBADO,kBACA;AACH,qBAAKC,iBAAL;AACH,aAHM;AAIPC,6BAJO,+BAIa;AAChB,oBAAMC,WAAW,KAAKC,WAAL,EAAjB;AACA,uBAAQ,KAAKC,cAAL,KAAwBF,QAAzB,IAAsC,CAA7C;AACH,aAPM;AAQPE,0BARO,4BAQU;AACb,uBAAO,KAAKC,aAAL,GAAqB,KAAKC,aAAL,EAA5B;AACH;AAVM,SAiFK,yCArEftB,MAqEe,EArEN;AACNe,gBADM,kBACC;AACH,qBAAKQ,oBAAL;AACH,aAHK;AAINN,6BAJM,+BAIc;AAChB,oBAAMC,WAAW,KAAKC,WAAL,EAAjB;AACA,uBAAQ,KAAKC,cAAL,KAAwBF,QAAzB,IAAsC,CAA7C;AACH,aAPK;AAQNE,0BARM,4BAQW;AACb,uBAAO,KAAKC,aAAZ;AACH;AAVK,SAqEM,yCAzDfpB,QAyDe,EAzDJ;AACRc,gBADQ,kBACD;AACH,qBAAKQ,oBAAL;AACA,qBAAKC,SAAL,CAAe,QAAf;AACH,aAJO;AAKRP,6BALQ,+BAKY;AAChB,uBAAO,CAAP;AACH,aAPO;AAQRG,0BARQ,4BAQS;AACb,uBAAO,KAAKD,WAAL,EAAP;AACH;AAVO,SAyDI;AAGhB,cAAKR,MAAL,GAAcA,MAAd;AACA;AACA,cAAKc,EAAL,GAAUd,OAAOC,YAAP,IAAuB,MAAKc,eAAL,EAAjC;AACA;AACA,cAAKC,QAAL,GAAgB,MAAKF,EAAL,CAAQG,WAAxB;AACA;AACA,cAAKP,aAAL,GAAqB,CAArB;AACA;AACA,cAAKQ,cAAL,GAAsB,IAAtB;AACA;AACA,cAAKC,MAAL,qDACK/B,OADL,EACegC,OAAOC,MAAP,CAAc,MAAKlB,cAAL,CAAoBf,OAApB,CAAd,CADf,iCAEKC,MAFL,EAEc+B,OAAOC,MAAP,CAAc,MAAKlB,cAAL,CAAoBd,MAApB,CAAd,CAFd,iCAGKC,QAHL,EAGgB8B,OAAOC,MAAP,CAAc,MAAKlB,cAAL,CAAoBb,QAApB,CAAd,CAHhB;AAKA;AACA,cAAKgC,QAAL,GAAgB,IAAhB;AACA;AACA,cAAKC,MAAL,GAAc,IAAd;AACA;AACA,cAAKC,OAAL,GAAe,EAAf;AACA;AACA,cAAKC,QAAL,GAAgB,IAAhB;AACA;AACA,cAAKC,WAAL,GAAmB,IAAnB;AACA;AACA,cAAKC,SAAL,GAAiB,IAAjB;AACA;AACA,cAAKC,KAAL,GAAa,IAAb;AACA;AACA,cAAKC,YAAL,GAAoB,CAApB;AACA;AACA,cAAKP,QAAL,GAAgB,IAAhB;AACA;AACA,cAAKQ,UAAL,GAAkB,IAAlB;AACA;AACA,cAAKC,MAAL,GAAc,IAAd;AACA;AACA,cAAKC,UAAL,GAAkB,EAAlB;AACA;AACA,cAAKC,KAAL,GAAa,IAAb;AA3CgB;AA4CnB;;AAED;;;;;;;+BAGO;AACH,iBAAKC,gBAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,kBAAL;;AAEA,iBAAKC,QAAL,CAAchD,MAAd;AACA,iBAAKiD,eAAL,CAAqB,KAAKtC,MAAL,CAAYuC,SAAjC;AACA,iBAAKC,SAAL,CAAe,CAAf;AACH;;AAED;;;;4CACoB;AAChB,gBAAI,KAAKhB,OAAT,EAAkB;AACd,qBAAKA,OAAL,CAAaiB,OAAb,CAAqB,kBAAU;AAC3BC,8BAAUA,OAAOC,UAAP,EAAV;AACH,iBAFD;AAGA,qBAAKnB,OAAL,GAAe,IAAf;AACA;AACA,qBAAKF,QAAL,CAAcsB,OAAd,CAAsB,KAAKnB,QAA3B;AACH;AACJ;;AAED;;;;iCACSQ,K,EAAO;AACZ,gBAAI,KAAKA,KAAL,KAAe,KAAKd,MAAL,CAAYc,KAAZ,CAAnB,EAAuC;AACnC,qBAAKA,KAAL,GAAa,KAAKd,MAAL,CAAYc,KAAZ,CAAb;AACA,qBAAKA,KAAL,CAAW7B,IAAX,CAAgByC,IAAhB,CAAqB,IAArB;AACH;AACJ;;AAED;;;;;;;;oCAKsB;AAAA,8CAATrB,OAAS;AAATA,uBAAS;AAAA;;AAClB,iBAAKsB,UAAL,CAAgBtB,OAAhB;AACH;;AAED;;;;;;;;;;;mCAQWA,O,EAAS;AAChB;AACA,iBAAKuB,iBAAL;;AAEA;AACA,gBAAIvB,WAAWA,QAAQwB,MAAvB,EAA+B;AAC3B,qBAAKxB,OAAL,GAAeA,OAAf;;AAEA;AACA,qBAAKF,QAAL,CAAcqB,UAAd;;AAEA;AACAnB,wBAAQyB,MAAR,CAAe,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC3BD,yBAAKN,OAAL,CAAaO,IAAb;AACA,2BAAOA,IAAP;AACH,iBAHD,EAGG,KAAK7B,QAHR,EAGkBsB,OAHlB,CAG0B,KAAKnB,QAH/B;AAIH;AAEJ;;AAED;;;;2CACmB;AACf,gBAAI,KAAKX,EAAL,CAAQsC,qBAAZ,EAAmC;AAC/B,qBAAKtB,UAAL,GAAkB,KAAKhB,EAAL,CAAQsC,qBAAR,CAA8B7D,SAAS8D,gBAAvC,CAAlB;AACH,aAFD,MAEO;AACH,qBAAKvB,UAAL,GAAkB,KAAKhB,EAAL,CAAQwC,oBAAR,CAA6B/D,SAAS8D,gBAAtC,CAAlB;AACH;;AAED,iBAAKvB,UAAL,CAAgBc,OAAhB,CAAwB,KAAK9B,EAAL,CAAQyC,WAAhC;AACH;;AAED;;;;4CACoB;AAAA;;AAChB,iBAAKzB,UAAL,CAAgB0B,cAAhB,GAAiC,YAAM;AACnC,oBAAMC,OAAO,OAAKhD,cAAL,EAAb;;AAEA,oBAAIgD,QAAQ,OAAKjD,WAAL,EAAZ,EAAgC;AAC5B,2BAAK6B,QAAL,CAAc/C,QAAd;AACA,2BAAKuB,SAAL,CAAe,OAAf;AACH,iBAHD,MAGO,IAAI4C,QAAQ,OAAKvC,cAAjB,EAAiC;AACpC,2BAAKwC,KAAL;AACH,iBAFM,MAEA,IAAI,OAAKzB,KAAL,KAAe,OAAKd,MAAL,CAAY/B,OAAZ,CAAnB,EAAyC;AAC5C,2BAAKyB,SAAL,CAAe,cAAf,EAA+B4C,IAA/B;AACH;AACJ,aAXD;AAYH;;AAED;;;;+CACuB;AACnB,iBAAK3B,UAAL,CAAgB0B,cAAhB,GAAiC,IAAjC;AACH;;AAED;;;;6CACqB;AACjB,iBAAKlC,QAAL,GAAgB,KAAKR,EAAL,CAAQ6C,cAAR,EAAhB;AACA,iBAAKrC,QAAL,CAAcsB,OAAd,CAAsB,KAAKnB,QAA3B;AACH;;AAED;;;;;;;;2CAKmB;AACf;AACA,gBAAI,KAAKX,EAAL,CAAQ8C,UAAZ,EAAwB;AACpB,qBAAKnC,QAAL,GAAgB,KAAKX,EAAL,CAAQ8C,UAAR,EAAhB;AACH,aAFD,MAEO;AACH,qBAAKnC,QAAL,GAAgB,KAAKX,EAAL,CAAQ+C,cAAR,EAAhB;AACH;AACD;AACA,iBAAKpC,QAAL,CAAcmB,OAAd,CAAsB,KAAK9B,EAAL,CAAQyC,WAA9B;AACH;;AAED;;;;;;;;kCAKUO,K,EAAO;AACb,iBAAKrC,QAAL,CAAcsC,IAAd,CAAmBD,KAAnB,GAA2BA,KAA3B;AACH;;AAED;;;;;;;;oCAKY;AACR,mBAAO,KAAKrC,QAAL,CAAcsC,IAAd,CAAmBD,KAA1B;AACH;;AAED;;;;0CACkBE,W,EAAaC,Q,EAAUC,O,EAAS;AAC9C,gBAAI,CAAC,KAAKvC,SAAV,EAAqB;AACjB,qBAAKA,SAAL,GAAiB,KAAKwC,sBAAL,CAA4B,KAAKrD,EAAL,GAAU,KAAKA,EAAL,CAAQlB,UAAlB,GAA+B,KAA3D,CAAjB;AACH;AACD,iBAAK+B,SAAL,CAAeyC,eAAf,CAA+BJ,WAA/B,EAA4C;AAAA,uBAAQC,SAASI,IAAT,CAAR;AAAA,aAA5C,EAAoEH,OAApE;AACH;;AAED;;;;;;;;iCAKStC,K,EAAO;AACZ,iBAAKA,KAAL,GAAaA,KAAb;AACH;;AAED;;;;;;;;kCAKUoB,M,EAAQ;AACd;AACA,gBAAI,KAAKtB,WAAL,IAAoBsB,UAAY,IAAI,KAAKtB,WAAL,CAAiBsB,MAArB,GAA8B,CAA/B,GAAoC,CAAvE,EAA2E;AACvE;AACH;;AAED,iBAAKhB,UAAL,GAAkB,EAAlB;AACA,iBAAKN,WAAL,GAAmB,EAAnB;AACA;AACA;AACA,gBAAM4C,WAAW,KAAK/C,MAAL,GAAc,KAAKA,MAAL,CAAYgD,gBAA1B,GAA6C,CAA9D;AACA,gBAAIC,UAAJ;AACA,iBAAKA,IAAI,CAAT,EAAYA,IAAIF,QAAhB,EAA0BE,GAA1B,EAA+B;AAC3B,qBAAKxC,UAAL,CAAgBwC,CAAhB,IAAqB,EAArB;AACA,qBAAKxC,UAAL,CAAgBwC,CAAhB,EAAmB,KAAKxB,SAAS,CAAd,CAAnB,IAAuC,CAAvC;AACA,qBAAKhB,UAAL,CAAgBwC,CAAhB,EAAmB,KAAKxB,SAAS,CAAd,IAAmB,CAAtC,IAA2C,CAA3C;AACH;AACD,iBAAKtB,WAAL,CAAiB,KAAKsB,SAAS,CAAd,CAAjB,IAAqC,CAArC;AACA,iBAAKtB,WAAL,CAAiB,KAAKsB,SAAS,CAAd,IAAmB,CAApC,IAAyC,CAAzC;AACH;;AAED;;;;;;;;;;;;iCASSA,M,EAAQyB,K,EAAOC,I,EAAM;AAC1B,gBAAI,KAAK9C,KAAT,EAAgB;AAAE,uBAAO,KAAKA,KAAZ;AAAoB;;AAEtC6C,oBAAQA,SAAS,CAAjB;AACAC,mBAAOA,QAAQ1B,SAAS,CAAxB;;AAEA,iBAAKR,SAAL,CAAeQ,MAAf;;AAEA;;;;;;;AAOA,gBAAI,CAAC,KAAKzB,MAAL,CAAYyB,MAAjB,EAAyB;AACrB,oBAAM2B,YAAY,KAAKC,YAAL,CAAkB,CAAlB,EAAqB,IAArB,EAA2B,KAAKhF,UAAhC,CAAlB;AACA,qBAAK2B,MAAL,GAAcoD,UAAUpD,MAAxB;AACH;;AAED,gBAAMsD,aAAa,KAAKtD,MAAL,CAAYyB,MAAZ,GAAqBA,MAAxC;AACA,gBAAM8B,aAAa,CAAC,EAAED,aAAa,EAAf,CAAD,IAAuB,CAA1C;AACA,gBAAMP,WAAW,KAAK/C,MAAL,CAAYgD,gBAA7B;AACA,gBAAIC,UAAJ;;AAEA,iBAAKA,IAAI,CAAT,EAAYA,IAAIF,QAAhB,EAA0BE,GAA1B,EAA+B;AAC3B,oBAAM5C,QAAQ,KAAKI,UAAL,CAAgBwC,CAAhB,CAAd;AACA,oBAAMO,OAAO,KAAKxD,MAAL,CAAYyD,cAAZ,CAA2BR,CAA3B,CAAb;AACA,oBAAIS,UAAJ;;AAEA,qBAAKA,IAAIR,KAAT,EAAgBQ,KAAKP,IAArB,EAA2BO,GAA3B,EAAgC;AAC5B,wBAAMC,QAAQ,CAAC,EAAED,IAAIJ,UAAN,CAAf;AACA,wBAAMM,MAAM,CAAC,EAAED,QAAQL,UAAV,CAAb;AACA,wBAAIO,MAAM,CAAV;AACA,wBAAIC,MAAM,CAAV;AACA,wBAAIC,UAAJ;;AAEA,yBAAKA,IAAIJ,KAAT,EAAgBI,IAAIH,GAApB,EAAyBG,KAAKR,UAA9B,EAA0C;AACtC,4BAAMhB,QAAQiB,KAAKO,CAAL,CAAd;;AAEA,4BAAIxB,QAAQuB,GAAZ,EAAiB;AACbA,kCAAMvB,KAAN;AACH;;AAED,4BAAIA,QAAQsB,GAAZ,EAAiB;AACbA,kCAAMtB,KAAN;AACH;AACJ;;AAEDlC,0BAAM,IAAIqD,CAAV,IAAeI,GAAf;AACAzD,0BAAM,IAAIqD,CAAJ,GAAQ,CAAd,IAAmBG,GAAnB;;AAEA,wBAAIZ,KAAK,CAAL,IAAUa,MAAM,KAAK3D,WAAL,CAAiB,IAAIuD,CAArB,CAApB,EAA6C;AACzC,6BAAKvD,WAAL,CAAiB,IAAIuD,CAArB,IAA0BI,GAA1B;AACH;;AAED,wBAAIb,KAAK,CAAL,IAAUY,MAAM,KAAK1D,WAAL,CAAiB,IAAIuD,CAAJ,GAAQ,CAAzB,CAApB,EAAiD;AAC7C,6BAAKvD,WAAL,CAAiB,IAAIuD,CAAJ,GAAQ,CAAzB,IAA8BG,GAA9B;AACH;AACJ;AACJ;;AAED,mBAAO,KAAKpF,MAAL,CAAYuF,aAAZ,GAA4B,KAAKvD,UAAjC,GAA8C,KAAKN,WAA1D;AACH;;AAED;;;;;;;;4CAKoB;AAChB,mBAAO,KAAKO,KAAL,CAAW3B,iBAAX,CAA6BuC,IAA7B,CAAkC,IAAlC,CAAP;AACH;;AAED;;;;2CACmB;AACf,gBAAI,KAAKd,MAAT,EAAiB;AACb,qBAAKA,MAAL,CAAYY,UAAZ;AACH;AACJ;;AAED;;;;;;kCAGU;AACN,gBAAI,CAAC,KAAK6C,QAAL,EAAL,EAAsB;AAClB,qBAAK9B,KAAL;AACH;AACD,iBAAK+B,KAAL;AACA,iBAAKlE,MAAL,GAAc,IAAd;AACA,iBAAKwB,iBAAL;AACA,iBAAK2C,gBAAL;AACA,iBAAKjE,QAAL,CAAckB,UAAd;AACA,iBAAKb,UAAL,CAAgBa,UAAhB;AACA,iBAAKrB,QAAL,CAAcqB,UAAd;;AAEA;AACA,gBAAI,KAAK3C,MAAL,CAAY2F,iBAAhB,EAAmC;AAC/B;AACA,oBAAI,OAAO,KAAK7E,EAAL,CAAQ8E,KAAf,KAAyB,UAA7B,EAAyC;AACrC,yBAAK9E,EAAL,CAAQ8E,KAAR;AACH;AACD;AACA,qBAAK9E,EAAL,GAAU,IAAV;AACA;AACA;AACA,oBAAI,CAAC,KAAKd,MAAL,CAAYC,YAAjB,EAA+B;AAC3BT,2BAAOG,sBAAP,GAAgC,IAAhC;AACH,iBAFD,MAEO;AACH,yBAAKK,MAAL,CAAYC,YAAZ,GAA2B,IAA3B;AACH;AACD;AACAT,uBAAOK,6BAAP,GAAuC,IAAvC;AACH;AACJ;;AAED;;;;;;;;6BAKK0B,M,EAAQ;AACT,iBAAKb,aAAL,GAAqB,CAArB;AACA,iBAAKM,QAAL,GAAgB,KAAKF,EAAL,CAAQG,WAAxB;AACA,iBAAKM,MAAL,GAAcA,MAAd;AACA,iBAAKsE,YAAL;AACH;;AAED;;;;uCACe;AACX,iBAAKH,gBAAL;AACA,iBAAK3D,MAAL,GAAc,KAAKjB,EAAL,CAAQgF,kBAAR,EAAd;;AAEA;AACA,iBAAK/D,MAAL,CAAYmD,KAAZ,GAAoB,KAAKnD,MAAL,CAAYmD,KAAZ,IAAqB,KAAKnD,MAAL,CAAYgE,WAArD;AACA,iBAAKhE,MAAL,CAAYiE,IAAZ,GAAmB,KAAKjE,MAAL,CAAYiE,IAAZ,IAAoB,KAAKjE,MAAL,CAAYkE,OAAnD;;AAEA,iBAAKlE,MAAL,CAAYF,YAAZ,CAAyBiC,KAAzB,GAAiC,KAAKjC,YAAtC;AACA,iBAAKE,MAAL,CAAYR,MAAZ,GAAqB,KAAKA,MAA1B;AACA,iBAAKQ,MAAL,CAAYa,OAAZ,CAAoB,KAAKtB,QAAzB;AACH;;AAED;;;;;;;;mCAKW;AACP,mBAAO,KAAKW,KAAL,KAAe,KAAKd,MAAL,CAAY/B,OAAZ,CAAtB;AACH;;AAED;;;;;;;;sCAKc;AACV,gBAAI,CAAC,KAAKmC,MAAV,EAAkB;AACd,uBAAO,CAAP;AACH;AACD,mBAAO,KAAKA,MAAL,CAAYhB,QAAnB;AACH;;AAED;;;;;;;;;;+BAOO2E,K,EAAOC,G,EAAK;AACf,gBAAI,CAAC,KAAK5D,MAAV,EAAkB;AAAE;AAAS;;AAE7B,iBAAKL,cAAL,GAAsB,IAAtB;;AAEA,gBAAIgE,SAAS,IAAb,EAAmB;AACfA,wBAAQ,KAAKzE,cAAL,EAAR;AACA,oBAAIyE,SAAS,KAAK1E,WAAL,EAAb,EAAiC;AAC7B0E,4BAAQ,CAAR;AACH;AACJ;AACD,gBAAIC,OAAO,IAAX,EAAiB;AACbA,sBAAM,KAAK3E,WAAL,EAAN;AACH;;AAED,iBAAKE,aAAL,GAAqBwE,KAArB;AACA,iBAAKlE,QAAL,GAAgB,KAAKF,EAAL,CAAQG,WAAxB;;AAEA,gBAAI,KAAKgB,KAAL,KAAe,KAAKd,MAAL,CAAY7B,QAAZ,CAAnB,EAA0C;AACtC,qBAAK+C,QAAL,CAAchD,MAAd;AACH;;AAED,mBAAO;AACH6F,uBAAOA,KADJ;AAEHC,qBAAKA;AAFF,aAAP;AAIH;;AAED;;;;;;;;wCAKgB;AACZ,mBAAO,CAAC,KAAKrE,EAAL,CAAQG,WAAR,GAAsB,KAAKD,QAA5B,IAAwC,KAAKa,YAApD;AACH;;AAED;;;;;;;;;;6BAOKqD,K,EAAOC,G,EAAK;AACb,gBAAI,CAAC,KAAK5D,MAAV,EAAkB;AAAE;AAAS;;AAE7B;AACA,iBAAKsE,YAAL;;AAEA,gBAAMK,eAAe,KAAKC,MAAL,CAAYjB,KAAZ,EAAmBC,GAAnB,CAArB;;AAEAD,oBAAQgB,aAAahB,KAArB;AACAC,kBAAMe,aAAaf,GAAnB;;AAEA,iBAAKjE,cAAL,GAAsBiE,GAAtB;;AAEA,iBAAKpD,MAAL,CAAYmD,KAAZ,CAAkB,CAAlB,EAAqBA,KAArB,EAA4BC,MAAMD,KAAlC;;AAEA,gBAAI,KAAKpE,EAAL,CAAQmB,KAAR,IAAiB,WAArB,EAAkC;AAC9B,qBAAKnB,EAAL,CAAQsF,MAAR,IAAkB,KAAKtF,EAAL,CAAQsF,MAAR,EAAlB;AACH;;AAED,iBAAK/D,QAAL,CAAcjD,OAAd;;AAEA,iBAAKyB,SAAL,CAAe,MAAf;AACH;;AAED;;;;;;gCAGQ;AACJ,iBAAKK,cAAL,GAAsB,IAAtB;;AAEA,iBAAKR,aAAL,IAAsB,KAAKC,aAAL,EAAtB;AACA,iBAAKoB,MAAL,IAAe,KAAKA,MAAL,CAAYiE,IAAZ,CAAiB,CAAjB,CAAf;;AAEA,iBAAK3D,QAAL,CAAchD,MAAd;;AAEA,iBAAKwB,SAAL,CAAe,OAAf;AACH;;AAED;;;;;;;;;yCAMiB;AACb,mBAAO,KAAKoB,KAAL,CAAWxB,cAAX,CAA0BoC,IAA1B,CAA+B,IAA/B,CAAP;AACH;;AAED;;;;;;;;0CAKkB;AACd,mBAAO,KAAKhB,YAAZ;AACH;;AAED;;;;;;;;wCAKgBiC,K,EAAO;AACnBA,oBAAQA,SAAS,CAAjB;AACA,gBAAI,KAAK0B,QAAL,EAAJ,EAAqB;AACjB,qBAAK3D,YAAL,GAAoBiC,KAApB;AACH,aAFD,MAEO;AACH,qBAAKJ,KAAL;AACA,qBAAK7B,YAAL,GAAoBiC,KAApB;AACA,qBAAKuC,IAAL;AACH;AACJ;;;;EAvmBiClH,KAAKmH,Q;;AAAtB/G,Q,CAEV8D,gB,GAAmB,G;kBAFT9D,Q;;;;;;;;;;;;;;;;;;ACZrB;;;;;;;AAOA;;;IAGqB+G,Q;AACjB;;;AAGA,wBAAc;AAAA;;AACV;;;;;AAKA,aAAKC,QAAL,GAAgB,IAAhB;AACH;AACD;;;;;;;;;;;2BAOGC,K,EAAOC,E,EAAI;AAAA;;AACV,gBAAI,CAAC,KAAKF,QAAV,EAAoB;AAAE,qBAAKA,QAAL,GAAgB,EAAhB;AAAqB;;AAE3C,gBAAIA,WAAW,KAAKA,QAAL,CAAcC,KAAd,CAAf;AACA,gBAAI,CAACD,QAAL,EAAe;AACXA,2BAAW,KAAKA,QAAL,CAAcC,KAAd,IAAuB,EAAlC;AACH;AACDD,qBAASG,IAAT,CAAcD,EAAd;;AAEA;AACA,mBAAO;AACHE,sBAAMH,KADH;AAEHvC,0BAAUwC,EAFP;AAGHG,oBAAI,YAACC,CAAD,EAAIJ,EAAJ;AAAA,2BAAW,MAAKG,EAAL,CAAQC,CAAR,EAAWJ,EAAX,CAAX;AAAA;AAHD,aAAP;AAKH;;AAED;;;;;;;;;;2BAOGD,K,EAAOC,E,EAAI;AACV,gBAAI,CAAC,KAAKF,QAAV,EAAoB;AAAE;AAAS;;AAE/B,gBAAMA,WAAW,KAAKA,QAAL,CAAcC,KAAd,CAAjB;AACA,gBAAIvB,UAAJ;AACA,gBAAIsB,QAAJ,EAAc;AACV,oBAAIE,EAAJ,EAAQ;AACJ,yBAAKxB,IAAIsB,SAASvD,MAAT,GAAkB,CAA3B,EAA8BiC,KAAK,CAAnC,EAAsCA,GAAtC,EAA2C;AACvC,4BAAIsB,SAAStB,CAAT,KAAewB,EAAnB,EAAuB;AACnBF,qCAASO,MAAT,CAAgB7B,CAAhB,EAAmB,CAAnB;AACH;AACJ;AACJ,iBAND,MAMO;AACHsB,6BAASvD,MAAT,GAAkB,CAAlB;AACH;AACJ;AACJ;;AAED;;;;;;gCAGQ;AACJ,iBAAKuD,QAAL,GAAgB,IAAhB;AACH;;AAED;;;;;;;;;;;6BAQKC,K,EAAOO,O,EAAS;AAAA;;AACjB,gBAAMN,KAAK,SAALA,EAAK,GAAa;AAAA,kDAATO,IAAS;AAATA,wBAAS;AAAA;;AACpB;AACAD,wBAAQE,KAAR,SAAoBD,IAApB;AACA;AACAE,2BAAW,YAAM;AACb,2BAAKN,EAAL,CAAQJ,KAAR,EAAeC,EAAf;AACH,iBAFD,EAEG,CAFH;AAGH,aAPD;AAQA,mBAAO,KAAKU,EAAL,CAAQX,KAAR,EAAeC,EAAf,CAAP;AACH;;AAED;;;;;;;;;kCAMUD,K,EAAgB;AAAA,+CAANQ,IAAM;AAANA,oBAAM;AAAA;;AACtB,gBAAI,CAAC,KAAKT,QAAV,EAAoB;AAAE;AAAS;AAC/B,gBAAMA,WAAW,KAAKA,QAAL,CAAcC,KAAd,CAAjB;AACAD,wBAAYA,SAAS9D,OAAT,CAAiB,cAAM;AAC/BgE,oCAAMO,IAAN;AACH,aAFW,CAAZ;AAGH;;;;;;kBApGgBV,Q;;;;;;;;;;;;;;ACVrB;;;;;;kBAMe,CACX9G,OAAO4H,qBAAP,IACA5H,OAAO6H,2BADP,IAEA7H,OAAO8H,wBAFP,IAGA9H,OAAO+H,sBAHP,IAIA/H,OAAOgI,uBAJP,IAKC,UAACvD,QAAD,EAAWwD,OAAX;AAAA,WAAuBP,WAAWjD,QAAX,EAAqB,OAAO,EAA5B,CAAvB;AAAA,CANU,EAObyD,IAPa,CAORlI,MAPQ,C;;;;;;;;;;;;;;;;;ACNf;;;;AACA;;IAAYL,I;;;;;;;;;;;;AAEZ;;;;;;;;;;;;AAYA;;;;IAIqBwI,W;;;AACjB;;;;AAIA,yBAAYC,SAAZ,EAAuB5H,MAAvB,EAA+B;AAAA;;AAE3B;;;;AAF2B,8HACrB4H,SADqB,EACV5H,MADU;;AAM3B,cAAK6H,cAAL,GAAsB7H,OAAO6H,cAA7B;AACA;;;;AAIA,cAAKC,qBAAL,GAA6BC,KAAKC,KAAL,CAAWhI,OAAO6H,cAAP,GAAwB7H,OAAOiI,UAA1C,CAA7B;;AAEA;;;;;AAKA,cAAKC,iBAAL,GAAyBlI,OAAOmI,SAAP,IAAoBnI,OAAOoI,aAApD;AACA;;;;AAIA,cAAKC,SAAL,GAAiB,MAAMrI,OAAOiI,UAA9B;AACA;;;;AAIA,cAAKK,QAAL,GAAgB,EAAhB;AACA;AACA,cAAKC,YAAL,GAAoB,IAApB;AA9B2B;AA+B9B;;AAED;;;;;;;+BAGO;AACH,iBAAKC,aAAL;AACA,iBAAKC,cAAL;AACH;;AAED;;;;;;;;yCAKiB;AACb,iBAAKF,YAAL,GAAoB,KAAKG,OAAL,CAAaC,WAAb,CAChB,KAAKC,KAAL,CAAWC,SAASC,aAAT,CAAuB,MAAvB,CAAX,EAA2C;AACvCC,0BAAU,UAD6B;AAEvCC,wBAAQ,CAF+B;AAGvCC,sBAAM,CAHiC;AAIvCC,qBAAK,CAJkC;AAKvCC,wBAAQ,CAL+B;AAMvCC,0BAAU,QAN6B;AAOvCC,uBAAO,GAPgC;AAQvCC,yBAAS,MAR8B;AASvCC,2BAAW,YAT4B;AAUvCC,kCAAkB,OAVqB;AAWvCC,kCAAkB,KAAKzJ,MAAL,CAAY0J,WAAZ,GAA0B,IAXL;AAYvCC,kCAAkB,KAAK3J,MAAL,CAAY4J,WAZS;AAavCC,+BAAe;AAbwB,aAA3C,CADgB,CAApB;;AAkBA,iBAAKC,SAAL;AACH;;AAED;;;;;;qCAGa;AAAA;;AACT,gBAAMC,aAAahC,KAAKC,KAAL,CAAW,KAAKqB,KAAL,GAAa,KAAKrJ,MAAL,CAAYiI,UAApC,CAAnB;AACA,gBAAM+B,mBAAmBjC,KAAKkC,IAAL,CAAUF,aAAa,KAAKjC,qBAA5B,CAAzB;;AAEA,mBAAO,KAAKQ,QAAL,CAActF,MAAd,GAAuBgH,gBAA9B,EAAgD;AAC5C,qBAAKF,SAAL;AACH;;AAED,mBAAO,KAAKxB,QAAL,CAActF,MAAd,GAAuBgH,gBAA9B,EAAgD;AAC5C,qBAAKE,YAAL;AACH;;AAED,iBAAK5B,QAAL,CAAc7F,OAAd,CAAsB,UAAC0H,KAAD,EAAQlF,CAAR,EAAc;AAChC;AACA,oBAAImF,cAAc,OAAKvC,cAAL,GAAsB,IAAIE,KAAKkC,IAAL,CAAU,OAAKjK,MAAL,CAAYiI,UAAZ,GAAyB,CAAnC,CAA5C;;AAEA,oBAAIhD,KAAK,OAAKqD,QAAL,CAActF,MAAd,GAAuB,CAAhC,EAAmC;AAC/BoH,kCAAc,OAAKf,KAAL,GAAc,OAAKxB,cAAL,IAAuB,OAAKS,QAAL,CAActF,MAAd,GAAuB,CAA9C,CAA5B;AACH;;AAED,uBAAKqH,gBAAL,CAAsBF,KAAtB,EAA6BC,WAA7B,EAA0C,OAAKE,MAA/C;AACA,uBAAKC,iBAAL,CAAuBJ,KAAvB;AACH,aAVD;AAWH;;AAED;;;;;;;;oCAKY;AACR,gBAAMA,QAAQ,EAAd;AACA,gBAAMK,aAAa,KAAK1C,qBAAL,GAA6B,KAAKQ,QAAL,CAActF,MAA9D;;AAEAmH,kBAAMM,IAAN,GAAa,KAAK/B,OAAL,CAAaC,WAAb,CACT,KAAKC,KAAL,CAAWC,SAASC,aAAT,CAAuB,QAAvB,CAAX,EAA6C;AACzCC,0BAAU,UAD+B;AAEzCC,wBAAQ,CAFiC;AAGzCC,sBAAMuB,aAAa,IAHsB;AAIzCtB,qBAAK,CAJoC;AAKzCC,wBAAQ,CALiC;AAMzCmB,wBAAQ,MANiC;AAOzCT,+BAAe;AAP0B,aAA7C,CADS,CAAb;AAWAM,kBAAMO,OAAN,GAAgBP,MAAMM,IAAN,CAAWE,UAAX,CAAsB,IAAtB,CAAhB;;AAEA,gBAAI,KAAKzC,iBAAT,EAA4B;AACxBiC,sBAAMS,QAAN,GAAiB,KAAKrC,YAAL,CAAkBI,WAAlB,CACb,KAAKC,KAAL,CAAWC,SAASC,aAAT,CAAuB,QAAvB,CAAX,EAA6C;AACzCC,8BAAU,UAD+B;AAEzCE,0BAAMuB,aAAa,IAFsB;AAGzCtB,yBAAK,CAHoC;AAIzCC,4BAAQ,CAJiC;AAKzCmB,4BAAQ;AALiC,iBAA7C,CADa,CAAjB;AASAH,sBAAMU,WAAN,GAAoBV,MAAMS,QAAN,CAAeD,UAAf,CAA0B,IAA1B,CAApB;AACH;;AAED,iBAAKrC,QAAL,CAAc5B,IAAd,CAAmByD,KAAnB;AACH;;AAED;;;;;;;;uCAKe;AACX,gBAAMW,YAAY,KAAKxC,QAAL,CAAcyC,GAAd,EAAlB;AACAD,sBAAUL,IAAV,CAAeO,aAAf,CAA6BC,WAA7B,CAAyCH,UAAUL,IAAnD;AACA,gBAAI,KAAKvC,iBAAT,EAA4B;AACxB4C,0BAAUF,QAAV,CAAmBI,aAAnB,CAAiCC,WAAjC,CAA6CH,UAAUF,QAAvD;AACH;AACJ;;AAED;;;;;;;;;;;yCAQiBT,K,EAAOd,K,EAAOiB,M,EAAQ;AACnC,gBAAMY,eAAenD,KAAKC,KAAL,CAAWqB,QAAQ,KAAKrJ,MAAL,CAAYiI,UAA/B,CAArB;AACA,gBAAM8B,aAAahC,KAAKC,KAAL,CAAW,KAAKqB,KAAL,GAAa,KAAKrJ,MAAL,CAAYiI,UAApC,CAAnB;;AAEA;AACAkC,kBAAMjF,KAAN,GAAeiF,MAAMO,OAAN,CAAcS,MAAd,CAAqBC,UAArB,GAAkCrB,UAAnC,IAAkD,CAAhE;AACAI,kBAAMhF,GAAN,GAAYgF,MAAMjF,KAAN,GAAcgG,eAAenB,UAAzC;;AAEAI,kBAAMO,OAAN,CAAcS,MAAd,CAAqB9B,KAArB,GAA6BA,KAA7B;AACAc,kBAAMO,OAAN,CAAcS,MAAd,CAAqBb,MAArB,GAA8BA,MAA9B;AACA,iBAAK1B,KAAL,CAAWuB,MAAMO,OAAN,CAAcS,MAAzB,EAAiC,EAAE9B,OAAO6B,eAAe,IAAxB,EAAjC;;AAEA,iBAAKtC,KAAL,CAAW,KAAKL,YAAhB,EAA8B,EAAEe,SAAS,OAAX,EAA9B;;AAEA,gBAAI,KAAKpB,iBAAT,EAA4B;AACxBiC,sBAAMU,WAAN,CAAkBM,MAAlB,CAAyB9B,KAAzB,GAAiCA,KAAjC;AACAc,sBAAMU,WAAN,CAAkBM,MAAlB,CAAyBb,MAAzB,GAAkCA,MAAlC;AACA,qBAAK1B,KAAL,CAAWuB,MAAMU,WAAN,CAAkBM,MAA7B,EAAqC,EAAE9B,OAAO6B,eAAe,IAAxB,EAArC;AACH;AACJ;;AAED;;;;;;oCAGY;AAAA;;AACR,iBAAK5C,QAAL,CAAc7F,OAAd,CAAsB;AAAA,uBAAS,OAAK8H,iBAAL,CAAuBJ,KAAvB,CAAT;AAAA,aAAtB;AACH;;AAED;;;;;;;;;0CAMkBA,K,EAAO;AACrBA,kBAAMO,OAAN,CAAcW,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BlB,MAAMO,OAAN,CAAcS,MAAd,CAAqB9B,KAAnD,EAA0Dc,MAAMO,OAAN,CAAcS,MAAd,CAAqBb,MAA/E;AACA,gBAAI,KAAKpC,iBAAT,EAA4B;AACxBiC,sBAAMU,WAAN,CAAkBQ,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkClB,MAAMU,WAAN,CAAkBM,MAAlB,CAAyB9B,KAA3D,EAAkEc,MAAMU,WAAN,CAAkBM,MAAlB,CAAyBb,MAA3F;AACH;AACJ;;AAED;;;;;;;;;;;;;;;iCAYS1I,K,EAAO0J,Y,EAAcpG,K,EAAOC,G,EAAK;AAAA;;AACtChG,iBAAKoM,KAAL,CAAW,UAAC3J,KAAD,EAAQ0J,YAAR,EAAsBpG,KAAtB,EAA6BC,GAA7B,EAAqC;AAC5C;AACA,oBAAIvD,MAAM,CAAN,aAAoB4J,KAAxB,EAA+B;AAC3B,wBAAMlH,WAAW1C,KAAjB;AACA,wBAAI,OAAK5B,MAAL,CAAYuF,aAAhB,EAA+B;AAC3B,+BAAKkG,SAAL,CAAenH,SAAStB,MAAT,GAAkB,OAAKhD,MAAL,CAAYsK,MAA9B,GAAuC,OAAKtK,MAAL,CAAYiI,UAAlE;AACA3D,iCAAS7B,OAAT,CAAiB,UAACiJ,YAAD,EAAezG,CAAf;AAAA,mCAAqB,OAAK0G,QAAL,CAAcD,YAAd,EAA4BzG,CAA5B,EAA+BC,KAA/B,EAAsCC,GAAtC,CAArB;AAAA,yBAAjB;AACA;AACH;AACDvD,4BAAQ0C,SAAS,CAAT,CAAR;AACH;;AAED;AACA;AACA,oBAAMsH,aAAa,GAAGC,IAAH,CAAQhJ,IAAR,CAAajB,KAAb,EAAoB;AAAA,2BAAOkK,MAAM,CAAb;AAAA,iBAApB,CAAnB;AACA;AACA,oBAAMC,iBAAiBH,aAAa,CAAb,GAAiB,CAAxC;;AAEA;AACA,oBAAMvC,QAAQ,OAAKA,KAAnB;AACA,oBAAMiB,SAAS,OAAKtK,MAAL,CAAYsK,MAAZ,GAAqB,OAAKtK,MAAL,CAAYiI,UAAhD;AACA,oBAAM+D,UAAU1B,SAASgB,YAAT,IAAyB,CAAzC;AACA,oBAAMW,QAAQ3B,SAAS,CAAvB;AACA,oBAAMtH,SAASpB,MAAMoB,MAAN,GAAe+I,cAA9B;AACA,oBAAMG,MAAM,OAAKlM,MAAL,CAAYmM,QAAZ,GAAuB,OAAKnM,MAAL,CAAYiI,UAA/C;AACA,oBAAMmE,MAAMrE,KAAK1C,GAAL,CAAS,OAAKrF,MAAL,CAAYiI,UAArB,EAAiC,CAAC,EAAEiE,MAAM,CAAR,CAAlC,CAAZ;AACA,oBAAMG,OAAOH,MAAME,GAAnB;;AAEA,oBAAIE,SAAS,CAAb;AACA,oBAAI,OAAKtM,MAAL,CAAYuM,SAAhB,EAA2B;AACvB,wBAAMlH,MAAMlG,KAAKkG,GAAL,CAASzD,KAAT,CAAZ;AACA,wBAAMwD,MAAMjG,KAAKiG,GAAL,CAASxD,KAAT,CAAZ;AACA0K,6BAAS,CAAClH,GAAD,GAAOC,GAAP,GAAa,CAACD,GAAd,GAAoBC,GAA7B;AACH;;AAED,oBAAMmH,QAAQxJ,SAASqG,KAAvB;AACA,oBAAIpE,UAAJ;;AAEA,qBAAKA,IAAKC,QAAQsH,KAAlB,EAA0BvH,IAAKE,MAAMqH,KAArC,EAA6CvH,KAAKoH,IAAlD,EAAwD;AACpD,wBAAMI,OAAO7K,MAAMmG,KAAK2E,KAAL,CAAWzH,IAAIuH,KAAJ,GAAYT,cAAvB,CAAN,KAAiD,CAA9D;AACA,wBAAMY,IAAI5E,KAAKC,KAAL,CAAWyE,OAAOH,MAAP,GAAgBL,KAA3B,CAAV;AACA,2BAAKW,QAAL,CAAc3H,IAAI,OAAKoD,SAAvB,EAAkC4D,QAAQU,CAAR,GAAYX,OAA9C,EAAuDE,MAAM,OAAK7D,SAAlE,EAA6EsE,IAAI,CAAjF;AACH;AAEJ,aA5CD;AA6CH;;AAED;;;;;;;;;;;;;;;iCAYS/K,K,EAAO0J,Y,EAAcpG,K,EAAOC,G,EAAK;AAAA;;AACtChG,iBAAKoM,KAAL,CAAW,UAAC3J,KAAD,EAAQ0J,YAAR,EAAsBpG,KAAtB,EAA6BC,GAA7B,EAAqC;AAC5C;AACA,oBAAIvD,MAAM,CAAN,aAAoB4J,KAAxB,EAA+B;AAC3B,wBAAMlH,WAAW1C,KAAjB;AACA,wBAAI,OAAK5B,MAAL,CAAYuF,aAAhB,EAA+B;AAC3B,+BAAKkG,SAAL,CAAenH,SAAStB,MAAT,GAAkB,OAAKhD,MAAL,CAAYsK,MAA9B,GAAuC,OAAKtK,MAAL,CAAYiI,UAAlE;AACA3D,iCAAS7B,OAAT,CAAiB,UAACiJ,YAAD,EAAezG,CAAf;AAAA,mCAAqB,OAAK4H,QAAL,CAAcnB,YAAd,EAA4BzG,CAA5B,EAA+BC,KAA/B,EAAsCC,GAAtC,CAArB;AAAA,yBAAjB;AACA;AACH;AACDvD,4BAAQ0C,SAAS,CAAT,CAAR;AACH;;AAED;AACA,oBAAMwI,eAAe,GAAGjB,IAAH,CAAQhJ,IAAR,CAAajB,KAAb,EAAoB;AAAA,2BAAOkK,MAAM,CAAb;AAAA,iBAApB,CAArB;AACA,oBAAI,CAACgB,YAAL,EAAmB;AACf,wBAAMC,iBAAiB,EAAvB;AACA,wBAAMC,MAAMpL,MAAMoB,MAAlB;AACA,wBAAIiC,UAAJ;AACA,yBAAKA,IAAI,CAAT,EAAYA,IAAI+H,GAAhB,EAAqB/H,GAArB,EAA0B;AACtB8H,uCAAe,IAAI9H,CAAnB,IAAwBrD,MAAMqD,CAAN,CAAxB;AACA8H,uCAAe,IAAI9H,CAAJ,GAAQ,CAAvB,IAA4B,CAACrD,MAAMqD,CAAN,CAA7B;AACH;AACDrD,4BAAQmL,cAAR;AACH;;AAED;AACA,oBAAMzC,SAAS,OAAKtK,MAAL,CAAYsK,MAAZ,GAAqB,OAAKtK,MAAL,CAAYiI,UAAhD;AACA,oBAAM+D,UAAU1B,SAASgB,YAAT,IAAyB,CAAzC;AACA,oBAAMW,QAAQ3B,SAAS,CAAvB;;AAEA,oBAAIgC,SAAS,CAAb;AACA,oBAAI,OAAKtM,MAAL,CAAYuM,SAAhB,EAA2B;AACvB,wBAAMlH,MAAMlG,KAAKkG,GAAL,CAASzD,KAAT,CAAZ;AACA,wBAAMwD,MAAMjG,KAAKiG,GAAL,CAASxD,KAAT,CAAZ;AACA0K,6BAAS,CAAClH,GAAD,GAAOC,GAAP,GAAa,CAACD,GAAd,GAAoBC,GAA7B;AACH;;AAED,uBAAK4H,QAAL,CAAcrL,KAAd,EAAqB0K,MAArB,EAA6BL,KAA7B,EAAoCD,OAApC,EAA6C9G,KAA7C,EAAoDC,GAApD;;AAEA;AACA,uBAAKyH,QAAL,CAAc,CAAd,EAAiBX,QAAQD,OAAR,GAAkB,OAAK3D,SAAxC,EAAmD,OAAKgB,KAAxD,EAA+D,OAAKhB,SAApE;AACH,aAzCD;AA0CH;;AAED;;;;;;;;;;;;;;;;iCAaSzG,K,EAAO0K,M,EAAQL,K,EAAOD,O,EAAS9G,K,EAAOC,G,EAAK;AAAA;;AAChD,iBAAKmD,QAAL,CAAc7F,OAAd,CAAsB,iBAAS;AAC3B,uBAAKyK,aAAL,CAAmB/C,KAAnB;AACA,uBAAKgD,iBAAL,CAAuBhD,KAAvB,EAA8BA,MAAMO,OAApC,EAA6C9I,KAA7C,EAAoD0K,MAApD,EAA4DL,KAA5D,EAAmED,OAAnE,EAA4E9G,KAA5E,EAAmFC,GAAnF;AACA,uBAAKgI,iBAAL,CAAuBhD,KAAvB,EAA8BA,MAAMU,WAApC,EAAiDjJ,KAAjD,EAAwD0K,MAAxD,EAAgEL,KAAhE,EAAuED,OAAvE,EAAgF9G,KAAhF,EAAuFC,GAAvF;AACH,aAJD;AAKH;;AAED;;;;;;;;;;;;;;;;;;0CAekBgF,K,EAAOiD,G,EAAKxL,K,EAAO0K,M,EAAQL,K,EAAOD,O,EAAS9G,K,EAAOC,G,EAAK;AACrE,gBAAI,CAACiI,GAAL,EAAU;AAAE;AAAS;;AAErB,gBAAMpK,SAASpB,MAAMoB,MAAN,GAAe,CAA9B;AACA,gBAAMwJ,QAAS,KAAKxM,MAAL,CAAYqN,UAAZ,IAA0B,KAAKhE,KAAL,IAAcrG,MAAzC,GACV,KAAKqG,KAAL,GAAarG,MADH,GAEV,CAFJ;;AAIA,gBAAMyB,QAAQsD,KAAKC,KAAL,CAAWhF,SAASmH,MAAMjF,KAA1B,CAAd;AACA;AACA;AACA,gBAAMR,OAAOqD,KAAKC,KAAL,CAAWhF,SAASmH,MAAMhF,GAA1B,IAAiC,CAA9C;AACA,gBAAIV,QAAQU,GAAR,IAAeT,OAAOQ,KAA1B,EAAiC;AAAE;AAAS;AAC5C,gBAAMoI,cAAcvF,KAAK1C,GAAL,CAASZ,KAAT,EAAgBS,KAAhB,CAApB;AACA,gBAAMqI,YAAYxF,KAAK3C,GAAL,CAASV,IAAT,EAAeS,GAAf,CAAlB;AACA,gBAAIF,UAAJ;AACA,gBAAIK,UAAJ;;AAEA8H,gBAAII,SAAJ;AACAJ,gBAAIK,MAAJ,CAAW,CAACH,cAAc7I,KAAf,IAAwB+H,KAAxB,GAAgC,KAAKnE,SAAhD,EAA2D4D,QAAQD,OAAnE;;AAEA,iBAAK/G,IAAIqI,WAAT,EAAsBrI,IAAIsI,SAA1B,EAAqCtI,GAArC,EAA0C;AACtC,oBAAMwH,OAAO7K,MAAM,IAAIqD,CAAV,KAAgB,CAA7B;AACA,oBAAM0H,IAAI5E,KAAKC,KAAL,CAAWyE,OAAOH,MAAP,GAAgBL,KAA3B,CAAV;AACAmB,oBAAIM,MAAJ,CAAW,CAACzI,IAAIR,KAAL,IAAc+H,KAAd,GAAsB,KAAKnE,SAAtC,EAAiD4D,QAAQU,CAAR,GAAYX,OAA7D;AACH;;AAED;AACA;AACA,iBAAK1G,IAAIiI,YAAY,CAArB,EAAwBjI,KAAKgI,WAA7B,EAA0ChI,GAA1C,EAA+C;AAC3C,oBAAMmH,QAAO7K,MAAM,IAAI0D,CAAJ,GAAQ,CAAd,KAAoB,CAAjC;AACA,oBAAMqH,KAAI5E,KAAKC,KAAL,CAAWyE,QAAOH,MAAP,GAAgBL,KAA3B,CAAV;AACAmB,oBAAIM,MAAJ,CAAW,CAACpI,IAAIb,KAAL,IAAc+H,KAAd,GAAsB,KAAKnE,SAAtC,EAAiD4D,QAAQU,EAAR,GAAYX,OAA7D;AACH;;AAEDoB,gBAAIO,SAAJ;AACAP,gBAAIQ,IAAJ;AACH;;AAED;;;;;;;;;;;iCAQSC,C,EAAGC,C,EAAGzE,K,EAAOiB,M,EAAQ;AAC1B,gBAAMyD,cAAchG,KAAK2E,KAAL,CAAWmB,IAAI,KAAKhG,cAApB,CAApB;AACA,gBAAMmG,YAAYjG,KAAK3C,GAAL,CAChB2C,KAAKkC,IAAL,CAAU,CAAC4D,IAAIxE,KAAL,IAAc,KAAKxB,cAA7B,IAA+C,CAD/B,EAEhB,KAAKS,QAAL,CAActF,MAFE,CAAlB;AAIA,gBAAIiC,UAAJ;AACA,iBAAKA,IAAI8I,WAAT,EAAsB9I,IAAI+I,SAA1B,EAAqC/I,GAArC,EAA0C;AACtC,oBAAMkF,QAAQ,KAAK7B,QAAL,CAAcrD,CAAd,CAAd;AACA,oBAAMuF,aAAavF,IAAI,KAAK4C,cAA5B;;AAEA,oBAAMoG,eAAe;AACjBC,wBAAInG,KAAK1C,GAAL,CAASwI,CAAT,EAAY5I,IAAI,KAAK4C,cAArB,CADa;AAEjBsG,wBAAIL,CAFa;AAGjBM,wBAAIrG,KAAK3C,GAAL,CAASyI,IAAIxE,KAAb,EAAoBpE,IAAI,KAAK4C,cAAT,GAA0BsC,MAAMO,OAAN,CAAcS,MAAd,CAAqB9B,KAAnE,CAHa;AAIjBgF,wBAAIP,IAAIxD;AAJS,iBAArB;;AAOA,oBAAI2D,aAAaC,EAAb,GAAkBD,aAAaG,EAAnC,EAAuC;AACnC,yBAAKlB,aAAL,CAAmB/C,KAAnB;;AAEA,yBAAKmE,iBAAL,CAAuBnE,MAAMO,OAA7B,EACQuD,aAAaC,EAAb,GAAkB1D,UAD1B,EAEQyD,aAAaE,EAFrB,EAGQF,aAAaG,EAAb,GAAkBH,aAAaC,EAHvC,EAIQD,aAAaI,EAAb,GAAkBJ,aAAaE,EAJvC;;AAMA,yBAAKG,iBAAL,CAAuBnE,MAAMU,WAA7B,EACQoD,aAAaC,EAAb,GAAkB1D,UAD1B,EAEQyD,aAAaE,EAFrB,EAGQF,aAAaG,EAAb,GAAkBH,aAAaC,EAHvC,EAIQD,aAAaI,EAAb,GAAkBJ,aAAaE,EAJvC;AAKH;AACJ;AACJ;;AAED;;;;;;;;;;;;;0CAUkBf,G,EAAKS,C,EAAGC,C,EAAGzE,K,EAAOiB,M,EAAQ;AACxC,gBAAI,CAAC8C,GAAL,EAAU;AAAE;AAAS;AACrBA,gBAAIR,QAAJ,CAAaiB,CAAb,EAAgBC,CAAhB,EAAmBzE,KAAnB,EAA0BiB,MAA1B;AACH;;AAED;;;;;;;;;sCAMcH,K,EAAO;AACjBA,kBAAMO,OAAN,CAAc6D,SAAd,GAA0B,KAAKvO,MAAL,CAAYmI,SAAtC;AACA,gBAAI,KAAKD,iBAAT,EAA4B;AACxBiC,sBAAMU,WAAN,CAAkB0D,SAAlB,GAA8B,KAAKvO,MAAL,CAAYoI,aAA1C;AACH;AACJ;;AAED;;;;;;;;;;iCAOSoG,I,EAAMC,O,EAAS;AACpB,gBAAMC,SAAS,KAAKpG,QAAL,CAAcqG,GAAd,CAAkB;AAAA,uBAASxE,MAAMM,IAAN,CAAWmE,SAAX,CAAqBJ,IAArB,EAA2BC,OAA3B,CAAT;AAAA,aAAlB,CAAf;AACA,mBAAOC,OAAO1L,MAAP,GAAgB,CAAhB,GAAoB0L,MAApB,GAA6BA,OAAO,CAAP,CAApC;AACH;;AAED;;;;;;;;uCAKe3F,Q,EAAU;AACrB,iBAAKH,KAAL,CAAW,KAAKL,YAAhB,EAA8B,EAAEc,OAAON,WAAW,IAApB,EAA9B;AACH;;;;;;kBApegBpB,W;;;;;;;;;;;;;;;;;;ACnBrB;;;;AACA;;IAAYxI,I;;;;;;;;;;;;AAEZ;;;IAGqB0P,Y;;;AACjB;;;;;AAKA,0BAAY7O,MAAZ,EAAoB;AAAA;;AAEhB;AAFgB,gIACVA,MADU;;AAGhB,cAAKA,MAAL,GAAcA,MAAd;;AAEA;AACA;AACA,cAAK8O,KAAL,GAAa;AACT7N,yBAAa,CADJ;AAETV,sBAAU,CAFD;AAGTwO,oBAAQ,IAHC;AAITlN,0BAAc,CAJL;AAKTwE,gBALS,kBAKF,CAAE,CALA;AAMT3C,iBANS,mBAMD,CAAE;AAND,SAAb;;AASA;AACA,cAAKsL,SAAL,GAAiBhP,OAAOgP,SAAP,CAAiBC,WAAjB,EAAjB;AACA;AACA,cAAKC,eAAL,GAAuBlP,OAAOkP,eAA9B;AACA;AACA,cAAKtN,KAAL,GAAa,IAAb;AACA;AACA,cAAKC,YAAL,GAAoB,CAApB;AACA;AACA,cAAKN,MAAL,GAAc,IAAd;AACA;AACA,cAAK4N,SAAL,GAAiB,IAAjB;AA3BgB;AA4BnB;;AAED;;;;;;;+BAGO;AACH,iBAAK7M,eAAL,CAAqB,KAAKtC,MAAL,CAAYuC,SAAjC;AACA,iBAAK6M,WAAL;AACH;;AAED;;;;;;;;sCAKc;AAAA;;AACV,gBAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,oBAAI,OAAK7J,QAAL,EAAJ,EAAqB;AAAE;AAAS;AAChC,uBAAK3E,SAAL,CAAe,cAAf,EAA+B,OAAKJ,cAAL,EAA/B;;AAEA;AACA,oBAAM2G,wBAAwB5H,OAAO4H,qBAAP,IAAgC5H,OAAO6H,2BAArE;AACAD,sCAAsBiI,cAAtB;AACH,aAPD;;AASA,iBAAKlI,EAAL,CAAQ,MAAR,EAAgBkI,cAAhB;AACH;;AAED;;;;;;;;;;;;6BASKC,G,EAAK1H,S,EAAWhG,K,EAAO2N,O,EAAS;AACjC,gBAAMT,QAAQjG,SAASC,aAAT,CAAuB,KAAKkG,SAA5B,CAAd;AACAF,kBAAMU,QAAN,GAAiB,KAAKxP,MAAL,CAAYyP,aAA7B;AACAX,kBAAMY,QAAN,GAAiB,KAAK1P,MAAL,CAAY0P,QAAZ,IAAwB,KAAzC;AACAZ,kBAAMS,OAAN,GAAgBA,WAAW,IAAX,GAAkB,MAAlB,GAA2BA,OAA3C;AACAT,kBAAMa,GAAN,GAAYL,GAAZ;AACAR,kBAAMlG,KAAN,CAAYS,KAAZ,GAAoB,MAApB;;AAEA,gBAAMuG,YAAYhI,UAAUiI,aAAV,CAAwB,KAAKb,SAA7B,CAAlB;AACA,gBAAIY,SAAJ,EAAe;AACXhI,0BAAUqD,WAAV,CAAsB2E,SAAtB;AACH;AACDhI,sBAAUe,WAAV,CAAsBmG,KAAtB;;AAEA,iBAAKgB,KAAL,CAAWhB,KAAX,EAAkBlN,KAAlB;AACH;;AAED;;;;;;;;;gCAMQmO,G,EAAKnO,K,EAAO;AAChBmO,gBAAIP,QAAJ,GAAe,KAAKxP,MAAL,CAAYyP,aAA3B;AACAM,gBAAIL,QAAJ,GAAe,KAAK1P,MAAL,CAAY0P,QAAZ,IAAwB,KAAvC;;AAEA,iBAAKI,KAAL,CAAWC,GAAX,EAAgBnO,KAAhB;AACH;;AAED;;;;;;;;;;;8BAQMkN,K,EAAOlN,K,EAAO;AAAA;;AAChB;AACA;AACA,gBAAI,OAAOkN,MAAMkB,IAAb,IAAqB,UAAzB,EAAqC;AACjClB,sBAAMkB,IAAN;AACH;;AAEDlB,kBAAMmB,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,uBAAKpP,SAAL,CAAe,OAAf,EAAwB,6BAAxB;AACH,aAFD;;AAIAiO,kBAAMmB,gBAAN,CAAuB,SAAvB,EAAkC,YAAM;AACpC,uBAAKpP,SAAL,CAAe,SAAf;AACH,aAFD;;AAIAiO,kBAAMmB,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,uBAAKpP,SAAL,CAAe,QAAf;AACH,aAFD;;AAIA;AACA;AACAiO,kBAAMmB,gBAAN,CAAuB,MAAvB,EAA+B,YAAM;AACjC,uBAAKpP,SAAL,CAAe,MAAf;AACH,aAFD;;AAIAiO,kBAAMmB,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,uBAAKpP,SAAL,CAAe,OAAf;AACH,aAFD;;AAIA,iBAAKiO,KAAL,GAAaA,KAAb;AACA,iBAAKlN,KAAL,GAAaA,KAAb;AACA,iBAAKuN,SAAL,GAAiB,IAAjB;AACA,iBAAK5N,MAAL,GAAc,IAAd;AACA,iBAAKe,eAAL,CAAqB,KAAKT,YAA1B;AACH;;AAED;;;;;;;;mCAKW;AACP,mBAAO,CAAC,KAAKiN,KAAN,IAAe,KAAKA,KAAL,CAAWC,MAAjC;AACH;;AAED;;;;;;;;sCAKc;AACV,gBAAIxO,WAAW,CAAC,KAAKgB,MAAL,IAAe,KAAKuN,KAArB,EAA4BvO,QAA3C;AACA,gBAAIA,YAAY2P,QAAhB,EAA0B;AAAE;AACxB3P,2BAAW,KAAKuO,KAAL,CAAWqB,QAAX,CAAoBhL,GAApB,CAAwB,CAAxB,CAAX;AACH;AACD,mBAAO5E,QAAP;AACH;;AAED;;;;;;;;;yCAMiB;AACb,mBAAO,KAAKuO,KAAL,IAAc,KAAKA,KAAL,CAAW7N,WAAhC;AACH;;AAED;;;;;;;;4CAKoB;AAChB,mBAAQ,KAAKR,cAAL,KAAwB,KAAKD,WAAL,EAAzB,IAAgD,CAAvD;AACH;;AAED;;;;;;;;wCAKgBsD,K,EAAO;AACnB,iBAAKjC,YAAL,GAAoBiC,SAAS,CAA7B;AACA,iBAAKgL,KAAL,CAAWjN,YAAX,GAA0B,KAAKA,YAA/B;AACH;;AAED;;;;;;;;+BAKOqD,K,EAAO;AACV,gBAAIA,SAAS,IAAb,EAAmB;AACf,qBAAK4J,KAAL,CAAW7N,WAAX,GAAyBiE,KAAzB;AACH;AACD,iBAAKkL,YAAL;AACH;;AAED;;;;;;;;;;;6BAQKlL,K,EAAOC,G,EAAK;AACb,iBAAKgB,MAAL,CAAYjB,KAAZ;AACA,iBAAK4J,KAAL,CAAWzI,IAAX;AACAlB,mBAAO,KAAKkL,UAAL,CAAgBlL,GAAhB,CAAP;AACH;;AAED;;;;;;;;gCAKQ;AACJ,iBAAK2J,KAAL,IAAc,KAAKA,KAAL,CAAWpL,KAAX,EAAd;AACA,iBAAK0M,YAAL;AACH;;AAED;;;;mCACWjL,G,EAAK;AAAA;;AACZ,iBAAKmL,UAAL,GAAkB,gBAAQ;AACtB,oBAAI7M,QAAQ0B,GAAZ,EAAiB;AACb,2BAAKzB,KAAL;AACA,2BAAKyC,MAAL,CAAYhB,GAAZ;AACH;AACJ,aALD;AAMA,iBAAKgC,EAAL,CAAQ,cAAR,EAAwB,KAAKmJ,UAA7B;AACH;;AAED;;;;uCACe;AACX,gBAAI,KAAKA,UAAT,EAAqB;AACjB,qBAAK1J,EAAL,CAAQ,cAAR,EAAwB,KAAK0J,UAA7B;AACA,qBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;;AAED;;;;;;;;;;;;;iCAUStN,M,EAAQyB,K,EAAOC,I,EAAM;AAC1B,gBAAI,KAAKnD,MAAT,EAAiB;AACb,4IAAsByB,MAAtB,EAA8ByB,KAA9B,EAAqCC,IAArC;AACH;AACD,mBAAO,KAAK9C,KAAL,IAAc,EAArB;AACH;;AAED;;;;;;;;oCAKY;AACR,mBAAO,KAAKkN,KAAL,CAAWyB,MAAlB;AACH;;AAED;;;;;;;;kCAKUzM,K,EAAO;AACb,iBAAKgL,KAAL,CAAWyB,MAAX,GAAoBzM,KAApB;AACH;;AAED;;;;;;;kCAIU;AACN,iBAAKJ,KAAL;AACA,iBAAK+B,KAAL;AACA,iBAAKqJ,KAAL,IAAc,KAAKA,KAAL,CAAW0B,UAAzB,IAAuC,KAAK1B,KAAL,CAAW0B,UAAX,CAAsBvF,WAAtB,CAAkC,KAAK6D,KAAvC,CAAvC;AACA,iBAAKA,KAAL,GAAa,IAAb;AACH;;;;;;kBAvSgBD,Y;;;;;;;;;;;;;;;;;;ACNrB;;;;;IAKqB4B,S;AACjB;;;AAGA,yBAAc;AAAA;;AACV,aAAKC,cAAL;AACH;;AAED;;;;;;;yCAGiB;AACb;;;;;;AAMA,iBAAKC,eAAL,GAAuB,EAAvB;AACA;;;;;AAKA,iBAAKC,eAAL,GAAuB,CAAC,CAAxB;AACH;;AAED;;;;;;;;;;;4CAQoB5N,M,EAAQkC,K,EAAOC,G,EAAK;AACpC,gBAAInC,UAAU,KAAK4N,eAAnB,EAAoC;AAChC,qBAAKF,cAAL;AACA,qBAAKE,eAAL,GAAuB5N,MAAvB;AACH;;AAED;AACA,gBAAI6N,iBAAiB,EAArB;AACA,gBAAI5L,IAAI,CAAR;AACA;AACA,mBAAOA,IAAI,KAAK0L,eAAL,CAAqB3N,MAAzB,IAAmC,KAAK2N,eAAL,CAAqB1L,CAArB,IAA0BC,KAApE,EAA2E;AACvED;AACH;AACD;AACA;AACA;AACA;AACA,gBAAIA,IAAI,CAAJ,IAAS,CAAb,EAAgB;AACZ4L,+BAAenK,IAAf,CAAoBxB,KAApB;AACH;AACD,mBAAOD,IAAI,KAAK0L,eAAL,CAAqB3N,MAAzB,IAAmC,KAAK2N,eAAL,CAAqB1L,CAArB,KAA2BE,GAArE,EAA0E;AACtE0L,+BAAenK,IAAf,CAAoB,KAAKiK,eAAL,CAAqB1L,CAArB,CAApB;AACAA;AACH;AACD;AACA,gBAAIA,IAAI,CAAJ,IAAS,CAAb,EAAgB;AACZ4L,+BAAenK,IAAf,CAAoBvB,GAApB;AACH;;AAED;AACA0L,6BAAiBA,eAAenO,MAAf,CAAsB,UAACoO,IAAD,EAAOC,GAAP,EAAYC,GAAZ,EAAoB;AACvD,oBAAID,OAAO,CAAX,EAAc;AACV,2BAAOD,QAAQE,IAAID,MAAM,CAAV,CAAf;AACH,iBAFD,MAEO,IAAIA,OAAOC,IAAIhO,MAAJ,GAAa,CAAxB,EAA2B;AAC9B,2BAAO8N,QAAQE,IAAID,MAAM,CAAV,CAAf;AACH;AACD,uBAAOD,QAAQE,IAAID,MAAM,CAAV,CAAR,IAAwBD,QAAQE,IAAID,MAAM,CAAV,CAAvC;AACH,aAPgB,CAAjB;;AASA;AACA;AACA;AACA,iBAAKJ,eAAL,GAAuB,KAAKA,eAAL,CAAqBM,MAArB,CAA4BJ,cAA5B,CAAvB;AACA,iBAAKF,eAAL,GAAuB,KAAKA,eAAL,CAAqBO,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,IAAIC,CAAd;AAAA,aAA1B,EAA2C1O,MAA3C,CAAkD,UAACoO,IAAD,EAAOC,GAAP,EAAYC,GAAZ,EAAoB;AACzF,oBAAID,OAAO,CAAX,EAAc;AACV,2BAAOD,QAAQE,IAAID,MAAM,CAAV,CAAf;AACH,iBAFD,MAEO,IAAIA,OAAOC,IAAIhO,MAAJ,GAAa,CAAxB,EAA2B;AAC9B,2BAAO8N,QAAQE,IAAID,MAAM,CAAV,CAAf;AACH;AACD,uBAAOD,QAAQE,IAAID,MAAM,CAAV,CAAR,IAAwBD,QAAQE,IAAID,MAAM,CAAV,CAAvC;AACH,aAPsB,CAAvB;;AASA;AACA;AACA,gBAAMM,qBAAqB,EAA3B;AACA,iBAAKpM,IAAI,CAAT,EAAYA,IAAI4L,eAAe7N,MAA/B,EAAuCiC,KAAK,CAA5C,EAA+C;AAC3CoM,mCAAmB3K,IAAnB,CAAwB,CAACmK,eAAe5L,CAAf,CAAD,EAAoB4L,eAAe5L,IAAE,CAAjB,CAApB,CAAxB;AACH;;AAED,mBAAOoM,kBAAP;AACH;;AAED;;;;;;;;yCAKiB;AACb,gBAAMC,sBAAsB,EAA5B;AACA,gBAAIrM,UAAJ;AACA,iBAAKA,IAAI,CAAT,EAAYA,IAAI,KAAK0L,eAAL,CAAqB3N,MAArC,EAA6CiC,KAAK,CAAlD,EAAqD;AACjDqM,oCAAoB5K,IAApB,CAAyB,CAAC,KAAKiK,eAAL,CAAqB1L,CAArB,CAAD,EAA0B,KAAK0L,eAAL,CAAqB1L,IAAE,CAAvB,CAA1B,CAAzB;AACH;AACD,mBAAOqM,mBAAP;AACH;;;;;;kBA7GgBb,S;;;;;;;;;;;;;;;;ACLrB;;IAAYtR,I;;;;;;;;;;AACZ;;;;;IAKqBoS,M;;;AACjB;;;;AAIA,oBAAY3J,SAAZ,EAAuB5H,MAAvB,EAA+B;AAAA;;AAE3B;AAF2B;;AAG3B,cAAK4H,SAAL,GAAiBA,SAAjB;AACA;;;;AAIA,cAAK5H,MAAL,GAAcA,MAAd;AACA;;;;AAIA,cAAKqJ,KAAL,GAAa,CAAb;AACA;;;;AAIA,cAAKiB,MAAL,GAActK,OAAOsK,MAAP,GAAgB,MAAKtK,MAAL,CAAYiI,UAA1C;AACA;AACA,cAAKuJ,OAAL,GAAe,CAAf;AACA;;;;AAIA,cAAK9I,OAAL,GAAe,IAAf;AAzB2B;AA0B9B;;AAED;;;;;;;;;;;8BAOM+I,E,EAAIC,M,EAAQ;AACd,mBAAOvS,KAAKyJ,KAAL,CAAW6I,EAAX,EAAeC,MAAf,CAAP;AACH;;AAED;;;;;;;wCAIgB;AACZ,iBAAKhJ,OAAL,GAAe,KAAKd,SAAL,CAAee,WAAf,CACXE,SAASC,aAAT,CAAuB,MAAvB,CADW,CAAf;;AAIA,iBAAKF,KAAL,CAAW,KAAKF,OAAhB,EAAyB;AACrBY,yBAAS,OADY;AAErBP,0BAAU,UAFW;AAGrB4I,4BAAY,MAHS;AAIrBC,kCAAkB,MAJG;AAKrBtH,wBAAQ,KAAKtK,MAAL,CAAYsK,MAAZ,GAAqB;AALR,aAAzB;;AAQA,gBAAI,KAAKtK,MAAL,CAAYqN,UAAZ,IAA0B,KAAKrN,MAAL,CAAY6R,YAA1C,EAAwD;AACpD,qBAAKjJ,KAAL,CAAW,KAAKF,OAAhB,EAAyB;AACrBW,2BAAO,MADc;AAErByI,+BAAW,KAAK9R,MAAL,CAAY+R,aAAZ,GAA4B,QAA5B,GAAuC,MAF7B;AAGrBC,+BAAW;AAHU,iBAAzB;AAKH;;AAED,iBAAKC,kBAAL;AACH;;AAED;;;;;;;;;;oCAOYpL,C,EAAGqL,S,EAAW;AACtB,aAACA,SAAD,IAAcrL,EAAEsL,cAAF,EAAd;;AAEA,gBAAMC,UAAUvL,EAAEwL,aAAF,GAAkBxL,EAAEwL,aAAF,CAAgB,CAAhB,EAAmBD,OAArC,GAA+CvL,EAAEuL,OAAjE;AACA,gBAAME,OAAO,KAAK5J,OAAL,CAAa6J,qBAAb,EAAb;;AAEA,gBAAMC,eAAe,KAAKnJ,KAA1B;AACA,gBAAMoJ,cAAc,KAAKC,QAAL,EAApB;;AAEA,gBAAI9H,iBAAJ;;AAEA,gBAAI,CAAC,KAAK5K,MAAL,CAAYqN,UAAb,IAA2BmF,eAAeC,WAA9C,EAA2D;AACvD7H,2BAAY,CAACwH,UAAUE,KAAKrJ,IAAhB,IAAwB,KAAKjJ,MAAL,CAAYiI,UAApC,GAAiDuK,YAAlD,IAAmE,CAA9E;;AAEA,oBAAI5H,WAAW,CAAf,EAAkB;AACdA,+BAAW,CAAX;AACH;AACJ,aAND,MAMO;AACHA,2BAAY,CAACwH,UAAUE,KAAKrJ,IAAf,GAAsB,KAAKP,OAAL,CAAaiK,UAApC,IAAkD,KAAKjK,OAAL,CAAakK,WAAhE,IAAgF,CAA3F;AACH;;AAED,mBAAOhI,QAAP;AACH;;AAED;;;;;;6CAGqB;AAAA;;AACjB,iBAAKlC,OAAL,CAAauH,gBAAb,CAA8B,OAA9B,EAAuC,aAAK;AACxC,oBAAM4C,kBAAkB,OAAKnK,OAAL,CAAaoK,YAAb,GAA4B,OAAKpK,OAAL,CAAaqK,YAAjE;AACA,oBAAIF,mBAAmB,CAAvB,EAA0B;AACtB;AACA,wBAAMP,OAAO,OAAK5J,OAAL,CAAa6J,qBAAb,EAAb;AACA,wBAAI1L,EAAEmM,OAAF,IAAaV,KAAKnJ,MAAL,GAAc0J,eAA/B,EAAgD;AAC5C;AACA;AACH;AACJ;;AAED,oBAAI,OAAK7S,MAAL,CAAYiT,QAAhB,EAA0B;AACtB,2BAAKpS,SAAL,CAAe,OAAf,EAAwBgG,CAAxB,EAA2B,OAAKqM,WAAL,CAAiBrM,CAAjB,CAA3B;AACH;AACJ,aAdD;;AAgBA,iBAAK6B,OAAL,CAAauH,gBAAb,CAA8B,QAA9B,EAAwC;AAAA,uBAAK,OAAKpP,SAAL,CAAe,QAAf,EAAyBgG,CAAzB,CAAL;AAAA,aAAxC;AACH;;AAED;;;;;;;;;;;;;;kCAWUjF,K,EAAOoB,M,EAAQkC,K,EAAOC,G,EAAK;AACjC,gBAAI,CAAC,KAAKgO,QAAL,CAAcnQ,MAAd,CAAL,EAA4B;AACxB,qBAAKoQ,SAAL;AACH;;AAED,iBAAKpT,MAAL,CAAYmM,QAAZ,GACI,KAAKR,QAAL,CAAc/J,KAAd,EAAqB,CAArB,EAAwBsD,KAAxB,EAA+BC,GAA/B,CADJ,GAEI,KAAK0H,QAAL,CAAcjL,KAAd,EAAqB,CAArB,EAAwBsD,KAAxB,EAA+BC,GAA/B,CAFJ;AAGH;;AAED;;;;;;sCAGc;AACV,gBAAI,KAAKuD,OAAL,KAAiB,IAArB,EAA2B;AACvB,qBAAKA,OAAL,CAAaiK,UAAb,GAA0B,CAA1B;AACH;AACJ;;AAED;;;;;;;;iCAKSU,O,EAAS;AACd,gBAAMtK,WAAW,KAAKL,OAAL,CAAakK,WAAb,GAA2BS,OAA5C;AACA,iBAAKC,kBAAL,CAAwBvK,QAAxB,EAAkC,IAAlC;AACH;;AAED;;;;;;;;;;2CAOmBA,Q,EAAUwK,S,EAAW;AACpC,gBAAMZ,aAAa,KAAKjK,OAAL,CAAaiK,UAAhC;AACA,gBAAMa,OAAO,CAAC,EAAE,KAAK9K,OAAL,CAAa+K,WAAb,GAA2B,CAA7B,CAAd;AACA,gBAAMC,YAAY,KAAKhL,OAAL,CAAakK,WAAb,GAA2B,KAAKlK,OAAL,CAAa+K,WAA1D;AACA,gBAAIE,SAAS5K,WAAWyK,IAAxB;AACA,gBAAII,SAASD,SAAShB,UAAtB;;AAEA,gBAAIe,aAAa,CAAjB,EAAoB;AAChB;AACA;AACH;;AAED;AACA,gBAAI,CAACH,SAAD,IAAc,CAACC,IAAD,IAASI,MAAvB,IAAiCA,SAASJ,IAA9C,EAAoD;AAChD;AACA,oBAAMK,OAAO,CAAb;AACAD,yBAAS7L,KAAK1C,GAAL,CAAS,CAACwO,IAAV,EAAgB9L,KAAK3C,GAAL,CAASyO,IAAT,EAAeD,MAAf,CAAhB,CAAT;AACAD,yBAAShB,aAAaiB,MAAtB;AACH;;AAED;AACAD,qBAAS5L,KAAK1C,GAAL,CAAS,CAAT,EAAY0C,KAAK3C,GAAL,CAASsO,SAAT,EAAoBC,MAApB,CAAZ,CAAT;AACA;AACA,gBAAIA,UAAUhB,UAAd,EAA0B;AACtB,qBAAKjK,OAAL,CAAaiK,UAAb,GAA0BgB,MAA1B;AACH;AACJ;;AAED;;;;;;;;qCAKa;AACT,mBAAO5L,KAAKC,KAAL,CAAW,KAAKU,OAAL,CAAaiK,UAAb,GAA0B,KAAK3S,MAAL,CAAYiI,UAAjD,CAAP;AACH;;AAED;;;;;;;;mCAKW;AACP,mBAAOF,KAAKC,KAAL,CAAW,KAAKJ,SAAL,CAAe6L,WAAf,GAA6B,KAAKzT,MAAL,CAAYiI,UAApD,CAAP;AACH;;AAED;;;;;;;;iCAKSoB,K,EAAO;AACZ,gBAAI,KAAKA,KAAL,IAAcA,KAAlB,EAAyB;AACrB,uBAAO,KAAP;AACH;;AAED,iBAAKA,KAAL,GAAaA,KAAb;;AAEA,gBAAI,KAAKrJ,MAAL,CAAYqN,UAAZ,IAA0B,KAAKrN,MAAL,CAAY6R,YAA1C,EAAwD;AACpD,qBAAKjJ,KAAL,CAAW,KAAKF,OAAhB,EAAyB;AACrBW,2BAAO;AADc,iBAAzB;AAGH,aAJD,MAIO;AACH,qBAAKT,KAAL,CAAW,KAAKF,OAAhB,EAAyB;AACrBW,2BAAO,CAAC,EAAE,KAAKA,KAAL,GAAa,KAAKrJ,MAAL,CAAYiI,UAA3B,CAAD,GAA0C;AAD5B,iBAAzB;AAGH;;AAED,iBAAK6L,UAAL;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;kCAKUxJ,M,EAAQ;AACd,gBAAIA,UAAU,KAAKA,MAAnB,EAA2B;AACvB,uBAAO,KAAP;AACH;AACD,iBAAKA,MAAL,GAAcA,MAAd;;AAEA,iBAAK1B,KAAL,CAAW,KAAKF,OAAhB,EAAyB;AACrB4B,wBAAQ,CAAC,EAAE,KAAKA,MAAL,GAAc,KAAKtK,MAAL,CAAYiI,UAA5B,CAAD,GAA2C;AAD9B,aAAzB;;AAIA,iBAAK6L,UAAL;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;iCAKSlJ,S,EAAU;AACf,gBAAMmJ,aAAa,IAAI,KAAK/T,MAAL,CAAYiI,UAAnC;AACA,gBAAM8I,MAAMhJ,KAAKC,KAAL,CAAW4C,YAAW,KAAKvB,KAA3B,IAAoC0K,UAAhD;;AAEA,gBAAIhD,MAAM,KAAKS,OAAX,IAAsBT,MAAM,KAAKS,OAAX,IAAsBuC,UAAhD,EAA4D;AACxD,qBAAKvC,OAAL,GAAeT,GAAf;;AAEA,oBAAI,KAAK/Q,MAAL,CAAY6R,YAAZ,IAA4B,KAAK7R,MAAL,CAAYgU,UAA5C,EAAwD;AACpD,wBAAMC,SAAS,CAAC,EAAE,KAAKvL,OAAL,CAAakK,WAAb,GAA2BhI,SAA7B,CAAhB;AACA,yBAAK0I,kBAAL,CAAwBW,MAAxB;AACH;;AAED,qBAAKC,cAAL,CAAoBnD,GAApB;AACH;AACJ;;AAED;;;;;;kCAGU;AACN,iBAAKtL,KAAL;AACA,gBAAI,KAAKiD,OAAT,EAAkB;AACd,oBAAI,KAAKA,OAAL,CAAa8H,UAAb,IAA2B,KAAK5I,SAApC,EAA+C;AAC3C,yBAAKA,SAAL,CAAeqD,WAAf,CAA2B,KAAKvC,OAAhC;AACH;AACD,qBAAKA,OAAL,GAAe,IAAf;AACH;AACJ;;AAED;AACA;;;;;;;;qCAKa,CAAE;;AAEf;;;;;;;;;;;;;;;;iCAaS9G,K,EAAO0J,Y,EAAcpG,K,EAAOC,G,EAAK,CAAE;;AAE5C;;;;;;;;;;;;;;;;iCAaSvD,K,EAAO0J,Y,EAAcpG,K,EAAOC,G,EAAK,CAAE;;AAE5C;;;;;;;;oCAKY,CAAE;;AAEd;;;;;;;;;uCAMe4D,Q,EAAU,CAAE;;;;EA7VK5J,KAAKmH,Q;;kBAApBiL,M;;;;;;;;;;;;;kBCGG4C,I;;AATxB;;;;;;AAEA;;;;;;;AAOe,SAASA,IAAT,CAAeC,OAAf,EAAwB;AACnC,QAAMC,WAAW,wBAAjB;AACA,QAAMC,MAAM,IAAIC,cAAJ,EAAZ;AACA,QAAIC,WAAW,KAAf;AACAF,QAAIG,IAAJ,CAASL,QAAQM,MAAR,IAAkB,KAA3B,EAAkCN,QAAQ9E,GAA1C,EAA+C,IAA/C;AACAgF,QAAIK,YAAJ,GAAmBP,QAAQO,YAAR,IAAwB,MAA3C;AACAL,QAAIrE,gBAAJ,CAAqB,UAArB,EAAiC,aAAK;AAClCoE,iBAASxT,SAAT,CAAmB,UAAnB,EAA+BgG,CAA/B;AACA,YAAIA,EAAE+N,gBAAF,IAAsB/N,EAAEgO,MAAF,IAAYhO,EAAEiO,KAAxC,EAA+C;AAC3CN,uBAAW,IAAX;AACH;AACJ,KALD;AAMAF,QAAIrE,gBAAJ,CAAqB,MAArB,EAA6B,aAAK;AAC9B,YAAI,CAACuE,QAAL,EAAe;AACXH,qBAASxT,SAAT,CAAmB,UAAnB,EAA+BgG,CAA/B;AACH;AACDwN,iBAASxT,SAAT,CAAmB,MAAnB,EAA2BgG,CAA3B;AACA,YAAI,OAAOyN,IAAIS,MAAX,IAAqB,OAAOT,IAAIS,MAApC,EAA4C;AACxCV,qBAASxT,SAAT,CAAmB,SAAnB,EAA8ByT,IAAIU,QAAlC,EAA4CnO,CAA5C;AACH,SAFD,MAEO;AACHwN,qBAASxT,SAAT,CAAmB,OAAnB,EAA4BgG,CAA5B;AACH;AACJ,KAVD;AAWAyN,QAAIrE,gBAAJ,CAAqB,OAArB,EAA8B;AAAA,eAAKoE,SAASxT,SAAT,CAAmB,OAAnB,EAA4BgG,CAA5B,CAAL;AAAA,KAA9B;AACAyN,QAAIW,IAAJ;AACAZ,aAASC,GAAT,GAAeA,GAAf;AACA,WAAOD,QAAP;AACH;;;;;;;;;;;;;kBC5BuBa,M;AARvB;;;;;;;;AAQc,SAASA,MAAT,CAAiBC,IAAjB,EAAmC;AAAA,sCAATC,OAAS;AAATA,eAAS;AAAA;;AAC9CA,YAAQ3S,OAAR,CAAgB,kBAAU;AACtBrB,eAAOiU,IAAP,CAAYtT,MAAZ,EAAoBU,OAApB,CAA4B,eAAO;AAC/B0S,iBAAKG,GAAL,IAAYvT,OAAOuT,GAAP,CAAZ;AACH,SAFD;AAGH,KAJD;AAKA,WAAOH,IAAP;AACH;;;;;;;;;;;;;kBCLuB5J,K;;AAVxB;;;;;;AAEA;;;;;;;;AAQe,SAASA,KAAT,CAAgBgK,IAAhB,EAAsB;AACjC,SAAO;AAAA,sCAAIvO,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WAAa,qCAAkB;AAAA,aAAMuO,sBAAQvO,IAAR,CAAN;AAAA,KAAlB,CAAb;AAAA,GAAP;AACH;;;;;;;;;;;;;kBCPuBwO,K;AALxB;;;;;AAKe,SAASA,KAAT,GAAkB;AAC7B,SAAO,gBAAgBzN,KAAK0N,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAvB;AACH;;;;;;;;;;;;;kBCDuBtQ,G;AANxB;;;;;;AAMe,SAASA,GAAT,CAAcuQ,MAAd,EAAsB;AACjC,QAAIC,UAAU,CAAC3F,QAAf;AACA9O,WAAOiU,IAAP,CAAYO,MAAZ,EAAoBnT,OAApB,CAA4B,aAAK;AAC7B,YAAImT,OAAO3Q,CAAP,IAAY4Q,OAAhB,EAAyB;AACrBA,sBAAUD,OAAO3Q,CAAP,CAAV;AACH;AACJ,KAJD;AAKA,WAAO4Q,OAAP;AACH;;;;;;;;;;;;;kBCRuBzQ,G;AANxB;;;;;;AAMe,SAASA,GAAT,CAAcwQ,MAAd,EAAsB;AACjC,QAAIE,WAAWC,OAAO7F,QAAP,CAAf;AACA9O,WAAOiU,IAAP,CAAYO,MAAZ,EAAoBnT,OAApB,CAA4B,aAAK;AAC7B,YAAImT,OAAO3Q,CAAP,IAAY6Q,QAAhB,EAA0B;AACtBA,uBAAWF,OAAO3Q,CAAP,CAAX;AACH;AACJ,KAJD;AAKA,WAAO6Q,QAAP;AACH;;;;;;;;;;;;;kBCNuBlN,K;AARxB;;;;;;;;AAQe,SAASA,KAAT,CAAgB6I,EAAhB,EAAoBC,MAApB,EAA4B;AACvCtQ,WAAOiU,IAAP,CAAY3D,MAAZ,EAAoBjP,OAApB,CAA4B,gBAAQ;AAChC,YAAIgP,GAAG7I,KAAH,CAASoN,IAAT,MAAmBtE,OAAOsE,IAAP,CAAvB,EAAqC;AACjCvE,eAAG7I,KAAH,CAASoN,IAAT,IAAiBtE,OAAOsE,IAAP,CAAjB;AACH;AACJ,KAJD;AAKA,WAAOvE,EAAP;AACH;;;;;;;;;;;;;;;;ACfD;;IAAYtS,I;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;IASM8W,W;;;;AACF;;;;;;;;;+BASOjW,M,EAAQ,CAAE;AACjB;;;;;;;;;AAMA,yBAAYkW,EAAZ,EAAgBlW,MAAhB,EAAwB;AAAA;AAAE;AAC1B;;;;;;;;;;+BAMO,CAAE;AACT;;;;;;;;;kCAMU,CAAE;;;;;;AAGhB;;;;;;;;;;;;;;;;;;;;;;;IAqBqBmW,U;;;;;;;AAyCjB;;;;;;;;AAxCA;+BA+CcnW,M,EAAQ;AAClB,gBAAMoW,aAAa,IAAID,UAAJ,CAAenW,MAAf,CAAnB;AACA,mBAAOoW,WAAWhW,IAAX,EAAP;AACH;;AAED;;;;;;;;;;;AAlBA;;;AA6BA;;;;;;;;;;;AAUA;;;;;;;;AAQA,wBAAYJ,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB;;;;AAFgB;;AAAA,cAhFpBqW,aAgFoB,GAhFJ;AACZpW,0BAAgB,IADJ;AAEZsC,uBAAgB,CAFJ;AAGZyR,wBAAgB,IAHJ;AAIZsC,qBAAgB,UAJJ;AAKZ1O,uBAAgB,IALJ;AAMZgC,yBAAgB,MANJ;AAOZF,yBAAgB,CAPJ;AAQZ6M,2BAAgB,IARJ;AASZlJ,wBAAgB,IATJ;AAUZmJ,yBAAgB,IAVJ;AAWZlM,oBAAgB,GAXJ;AAYZyH,2BAAgB,KAZJ;AAaZkB,sBAAgB,IAbJ;AAcZwD,2BAAgB,IAdJ;AAeZ5O,4BAAgB,IAfJ;AAgBZ6O,4BAAgB,IAhBJ;AAiBZjH,2BAAgB,KAjBJ;AAkBZT,uBAAgB,OAlBJ;AAmBZ2H,yBAAgB,EAnBJ;AAoBZpK,uBAAgB,KApBJ;AAqBZqK,2BAAgB,KArBJ;AAsBZ3O,wBAAgBzI,OAAOqX,gBAAP,IAA2BC,OAAOC,UAAP,GAAoBD,OAAOE,WAtB1D;AAuBZC,qBAAgB,EAvBJ;AAwBZ7O,2BAAgB,MAxBJ;AAyBZ8O,sCAzBY;AA0BZC,wBAAgB,KA1BJ;AA2BZtF,0BAAgB,KA3BJ;AA4BZuF,wBAAgB,CA5BJ;AA6BZ7R,2BAAgB,KA7BJ;AA8BZ4C,uBAAgB,MA9BJ,EAgFI;AAAA,cA9CpBkP,QA8CoB,GA9CT;AACPxI,gDADO;AAEPtP,wCAFO,EA8CS;AAAA,cApBpBJ,IAoBoB,GApBbA,IAoBa;AAMhB,cAAKa,MAAL,GAAcb,KAAK+V,MAAL,CAAY,EAAZ,EAAgB,MAAKmB,aAArB,EAAoCrW,MAApC,CAAd;;AAEA;AACA,cAAK4H,SAAL,GAAiB,YAAY,OAAO5H,OAAO4H,SAA1B,GACbiB,SAASgH,aAAT,CAAuB,MAAK7P,MAAL,CAAY4H,SAAnC,CADa,GAEb,MAAK5H,MAAL,CAAY4H,SAFhB;;AAIA,YAAI,CAAC,MAAKA,SAAV,EAAqB;AACjB,kBAAM,IAAI0P,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAED,YAAI,MAAKtX,MAAL,CAAY0W,cAAZ,IAA8B,IAAlC,EAAwC;AACpC;AACA,kBAAKA,cAAL,GAAsB,MAAK9O,SAA3B;AACH,SAHD,MAGO,IAAI,OAAO,MAAK5H,MAAL,CAAY0W,cAAnB,IAAqC,QAAzC,EAAmD;AACtD;AACA,kBAAKA,cAAL,GAAsB7N,SAASgH,aAAT,CAAuB,MAAK7P,MAAL,CAAY0W,cAAnC,CAAtB;AACH,SAHM,MAGA;AACH;AACA,kBAAKA,cAAL,GAAsB,MAAK1W,MAAL,CAAY0W,cAAlC;AACH;;AAED,YAAI,CAAC,MAAKA,cAAV,EAA0B;AACtB,kBAAM,IAAIY,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,YAAI,MAAKtX,MAAL,CAAY6H,cAAZ,IAA8B,CAAlC,EAAqC;AACjC,kBAAM,IAAIyP,KAAJ,CAAU,uCAAV,CAAN;AACH,SAFD,MAEO,IAAI,MAAKtX,MAAL,CAAY6H,cAAZ,GAA6B,CAA7B,IAAkC,CAAtC,EAAyC;AAC5C,kBAAM,IAAIyP,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED;;;;;AAKA,cAAKC,WAAL,GAAmB,CAAnB;;AAEA;;;;AAIA,cAAKC,OAAL,GAAe,KAAf;;AAEA;;;;;AAKA,cAAKC,SAAL,GAAiB,EAAjB;;AAEA;;;;AAIA,cAAKC,WAAL,GAAmB,IAAnB;AACA;AACA,cAAK1T,WAAL,GAAmB,IAAnB;AACA;AACA,cAAK2T,MAAL,GAAc,IAAd;AACA;AACA,cAAKrB,OAAL,GAAe,IAAf;AACA;AACA,cAAKsB,SAAL,GAAiB,IAAjB;;AAEA;AACA,YAAI,OAAO,MAAK5X,MAAL,CAAYkX,QAAnB,KAAgC,UAApC,EAAgD;AAC5C,kBAAM,IAAII,KAAJ,CAAU,+BAAV,CAAN;AACH;AACD;;;AAGA,cAAK/F,MAAL,GAAc,MAAKvR,MAAL,CAAYkX,QAA1B;AACA;;;AAGA,cAAKW,OAAL,GAAe,MAAKR,QAAL,CAAc,MAAKrX,MAAL,CAAYsW,OAA1B,CAAf;;AAEA;;;AAGA,cAAKwB,qBAAL,GAA6B,EAA7B;AACA;AACA,cAAKC,WAAL,GAAmB,KAAnB;AACA;AACA,cAAKC,OAAL,GAAe,KAAf;;AAEA;AACA;AACA;AACA,YAAIC,YAAY,CAAhB;AACA,cAAKC,SAAL,GAAiB/Y,KAAKgZ,QAAL,CAAc,YAAM;AACjC,gBAAIF,aAAa,MAAKN,MAAL,CAAYjP,OAAZ,CAAoB+K,WAArC,EAAkD;AAC9CwE,4BAAY,MAAKN,MAAL,CAAYjP,OAAZ,CAAoB+K,WAAhC;AACA,sBAAK2E,KAAL;AACA,sBAAKC,UAAL;AACH;AACJ,SANgB,EAMd,OAAO,MAAKrY,MAAL,CAAYmX,UAAnB,KAAkC,QAAlC,GAA6C,MAAKnX,MAAL,CAAYmX,UAAzD,GAAsE,GANxD,CAAjB;;AAQA;AACH;;AAED;;;;;;;;;;;;+BAQO;AACH,iBAAKmB,eAAL,CAAqB,KAAKtY,MAAL,CAAYiX,OAAjC;AACA,iBAAKsB,YAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,eAAL;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;;;wCAQgBxB,O,EAAS;AAAA;;AACrB;AACAA,oBAAQxU,OAAR,CAAgB;AAAA,uBAAU,OAAKiW,SAAL,CAAeC,MAAf,CAAV;AAAA,aAAhB;;AAEA;AACA1B,oBAAQxU,OAAR,CAAgB,kBAAU;AACtB;AACA;AACA,oBAAI,CAACkW,OAAOC,SAAZ,EAAuB;AACnB,2BAAKC,UAAL,CAAgBF,OAAOhS,IAAvB;AACH;AACJ,aAND;AAOA,iBAAK9F,SAAL,CAAe,oBAAf,EAAqCoW,OAArC;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;;;kCAQU0B,M,EAAQ;AAAA;;AACd,gBAAI,CAACA,OAAOhS,IAAZ,EAAkB;AACd,sBAAM,IAAI2Q,KAAJ,CAAU,8BAAV,CAAN;AACH;AACD,gBAAI,CAACqB,OAAOtE,QAAZ,EAAsB;AAClB,sBAAM,IAAIiD,KAAJ,aAAoBqB,OAAOhS,IAA3B,0CAAN;AACH;;AAED;AACA,gBAAIgS,OAAOG,WAAX,EAAwB;AACpB1X,uBAAOiU,IAAP,CAAYsD,OAAOG,WAAnB,EAAgCrW,OAAhC,CAAwC,4BAAoB;AACxD;;;;AAIA,2BAAKsW,gBAAL,IAAyBJ,OAAOG,WAAP,CAAmBC,gBAAnB,CAAzB;AACH,iBAND;AAOH;;AAED,gBAAMC,WAAWL,OAAOtE,QAAxB;;AAEA;AACA,gBAAM4E,wBAAwB7X,OAAO8X,mBAAP,CAA2B/Z,KAAKmH,QAAL,CAAc6S,SAAzC,CAA9B;AACAF,kCAAsBxW,OAAtB,CAA8B,eAAO;AACjCuW,yBAASG,SAAT,CAAmB7D,GAAnB,IAA0BnW,KAAKmH,QAAL,CAAc6S,SAAd,CAAwB7D,GAAxB,CAA1B;AACH,aAFD;;AAIA;;;;;AAKA,iBAAKqD,OAAOhS,IAAZ,IAAoB,IAAIqS,QAAJ,CAAaL,OAAO3Y,MAAP,IAAiB,EAA9B,EAAkC,IAAlC,CAApB;AACA,iBAAKa,SAAL,CAAe,cAAf,EAA+B8X,OAAOhS,IAAtC;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;;;mCAQWA,I,EAAM;AACb,gBAAI,CAAC,KAAKA,IAAL,CAAL,EAAiB;AACb,sBAAM,IAAI2Q,KAAJ,aAAoB3Q,IAApB,8BAAN;AACH;AACD,gBAAI,KAAKmR,qBAAL,CAA2BnR,IAA3B,CAAJ,EAAsC;AAClC;AACA,qBAAKyS,aAAL,CAAmBzS,IAAnB;AACH;AACD,iBAAKA,IAAL,EAAWvG,IAAX;AACA,iBAAK0X,qBAAL,CAA2BnR,IAA3B,IAAmC,IAAnC;AACA,iBAAK9F,SAAL,CAAe,oBAAf,EAAqC8F,IAArC;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;;;sCAQcA,I,EAAM;AAChB,gBAAI,CAAC,KAAKA,IAAL,CAAL,EAAiB;AACb,sBAAM,IAAI2Q,KAAJ,aAAoB3Q,IAApB,sDAAN;AACH;AACD,gBAAI,CAAC,KAAKmR,qBAAL,CAA2BnR,IAA3B,CAAL,EAAuC;AACnC,sBAAM,IAAI2Q,KAAJ,aAAoB3Q,IAApB,6CAAN;AACH;AACD,gBAAI,OAAO,KAAKA,IAAL,EAAW0S,OAAlB,KAA8B,UAAlC,EAA8C;AAC1C,sBAAM,IAAI/B,KAAJ,aAAoB3Q,IAApB,wCAAN;AACH;;AAED,iBAAKA,IAAL,EAAW0S,OAAX;AACA,mBAAO,KAAKvB,qBAAL,CAA2BnR,IAA3B,CAAP;AACA,iBAAK9F,SAAL,CAAe,kBAAf,EAAmC8F,IAAnC;AACA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;4CAMoB;AAAA;;AAChBvF,mBAAOiU,IAAP,CAAY,KAAKyC,qBAAjB,EAAwCrV,OAAxC,CAAgD;AAAA,uBAAQ,OAAK2W,aAAL,CAAmBzS,IAAnB,CAAR;AAAA,aAAhD;AACH;;AAED;;;;;;;;;uCAMe;AAAA;;AACX,iBAAKgR,MAAL,GAAc,IAAI,KAAKpG,MAAT,CAAgB,KAAK3J,SAArB,EAAgC,KAAK5H,MAArC,CAAd;AACA,iBAAK2X,MAAL,CAAYvX,IAAZ;AACA,iBAAKS,SAAL,CAAe,gBAAf,EAAiC,KAAK8W,MAAtC;;AAEA,gBAAI,KAAK3X,MAAL,CAAYmX,UAAhB,EAA4B;AACxB3X,uBAAOyQ,gBAAP,CAAwB,QAAxB,EAAkC,KAAKiI,SAAvC,EAAkD,IAAlD;AACH;;AAED,iBAAKP,MAAL,CAAYxQ,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC3B,uBAAKkR,UAAL;AACA,uBAAKV,MAAL,CAAY/M,QAAZ,CAAqB,OAAK0L,OAAL,CAAahW,iBAAb,EAArB;AACH,aAHD;;AAKA;AACA,iBAAKqX,MAAL,CAAYxQ,EAAZ,CAAe,OAAf,EAAwB,UAACN,CAAD,EAAI+D,QAAJ,EAAiB;AACrC1D,2BAAW;AAAA,2BAAM,OAAKf,MAAL,CAAYyE,QAAZ,CAAN;AAAA,iBAAX,EAAwC,CAAxC;AACH,aAFD;;AAIA;AACA,iBAAK+M,MAAL,CAAYxQ,EAAZ,CAAe,QAAf,EAAyB,aAAK;AAC1B,oBAAI,OAAKnH,MAAL,CAAY4W,aAAhB,EAA+B;AAC3B,2BAAKyB,UAAL;AACH;AACD,uBAAKxX,SAAL,CAAe,QAAf,EAAyBgG,CAAzB;AACH,aALD;AAMH;;AAED;;;;;;;;;wCAMgB;AAAA;;AACZ,gBAAI,KAAKyP,OAAT,EAAkB;AACd,qBAAKA,OAAL,CAAa+C,OAAb;AACH;;AAED;AACA,gBAAI,KAAKrZ,MAAL,CAAYsW,OAAZ,IAAuB,cAA3B,EAA2C;AACvC,qBAAKtW,MAAL,CAAYsW,OAAZ,GAAsB,cAAtB;AACH;;AAED,gBAAI,KAAKtW,MAAL,CAAYsW,OAAZ,IAAuB,UAAvB,IAAqC,CAAC,KAAKuB,OAAL,CAAasB,SAAb,CAAuBG,gBAAvB,CAAwCzW,IAAxC,CAA6C,IAA7C,CAA1C,EAA8F;AAC1F,qBAAK7C,MAAL,CAAYsW,OAAZ,GAAsB,cAAtB;AACH;;AAED,iBAAKA,OAAL,GAAe,IAAI,KAAKuB,OAAT,CAAiB,KAAK7X,MAAtB,CAAf;AACA,iBAAKsW,OAAL,CAAalW,IAAb;AACA,iBAAKS,SAAL,CAAe,iBAAf,EAAkC,KAAKyV,OAAvC;;AAEA,iBAAKA,OAAL,CAAanP,EAAb,CAAgB,QAAhB,EAA0B;AAAA,uBAAM,OAAKtG,SAAL,CAAe,QAAf,CAAN;AAAA,aAA1B;AACA,iBAAKyV,OAAL,CAAanP,EAAb,CAAgB,MAAhB,EAAwB;AAAA,uBAAM,OAAKtG,SAAL,CAAe,MAAf,CAAN;AAAA,aAAxB;AACA,iBAAKyV,OAAL,CAAanP,EAAb,CAAgB,OAAhB,EAAyB;AAAA,uBAAM,OAAKtG,SAAL,CAAe,OAAf,CAAN;AAAA,aAAzB;;AAEA,iBAAKyV,OAAL,CAAanP,EAAb,CAAgB,cAAhB,EAAgC,gBAAQ;AACpC,uBAAKwQ,MAAL,CAAY/M,QAAZ,CAAqB,OAAK0L,OAAL,CAAahW,iBAAb,EAArB;AACA,uBAAKO,SAAL,CAAe,cAAf,EAA+B4C,IAA/B;AACH,aAHD;AAIH;;AAED;;;;;;;;0CAKkB;AACd,gBAAI,KAAKzD,MAAL,CAAY4W,aAAhB,EAA+B;AAC3B,qBAAKgB,SAAL,GAAiB,yBAAjB;AACH;AACJ;;AAED;;;;;;;;;sCAMc;AACV,mBAAO,KAAKtB,OAAL,CAAa9V,WAAb,EAAP;AACH;;AAED;;;;;;;;;yCAMiB;AACb,mBAAO,KAAK8V,OAAL,CAAa7V,cAAb,EAAP;AACH;;AAED;;;;;;;;;uCAMe8Y,O,EAAS;AACpB,gBAAI,KAAK/Y,WAAL,MAAsB+Y,OAA1B,EAAmC;AAC/B,qBAAKpT,MAAL,CAAY,CAAZ;AACH,aAFD,MAEO;AACH,qBAAKA,MAAL,CAAYoT,UAAQ,KAAK/Y,WAAL,EAApB;AACH;AACJ;;AAED;;;;;;;;;;;;;;6BAWK0E,K,EAAOC,G,EAAK;AAAA;;AACb,iBAAKtE,SAAL,CAAe,aAAf,EAA8B;AAAA,uBAAM,OAAKwF,IAAL,CAAUnB,KAAV,EAAiBC,GAAjB,CAAN;AAAA,aAA9B;AACA,iBAAKmR,OAAL,CAAajQ,IAAb,CAAkBnB,KAAlB,EAAyBC,GAAzB;AACH;;AAED;;;;;;;;gCAKQ;AACJ,iBAAKmR,OAAL,CAAa9Q,QAAb,MAA2B,KAAK8Q,OAAL,CAAa5S,KAAb,EAA3B;AACH;;AAED;;;;;;;;oCAKY;AACR,iBAAK4S,OAAL,CAAa9Q,QAAb,KAA0B,KAAKa,IAAL,EAA1B,GAAwC,KAAK3C,KAAL,EAAxC;AACH;;AAED;;;;;;;;;oCAMY;AACR,mBAAO,CAAC,KAAK4S,OAAL,CAAa9Q,QAAb,EAAR;AACH;;AAED;;;;;;;;;;qCAOa+T,O,EAAS;AAClB,iBAAKC,IAAL,CAAU,CAACD,OAAD,IAAY,CAAC,KAAKvZ,MAAL,CAAYoX,UAAnC;AACH;;AAED;;;;;;;;;;oCAOYmC,O,EAAS;AACjB,iBAAKC,IAAL,CAAUD,WAAW,KAAKvZ,MAAL,CAAYoX,UAAjC;AACH;;AAED;;;;;;;;;;;;6BASKxD,M,EAAQ;AACT,gBAAMrT,WAAW,KAAKC,WAAL,MAAsB,CAAvC;AACA,gBAAIuI,WAAW,KAAKtI,cAAL,MAAyB,CAAxC;AACAsI,uBAAWhB,KAAK1C,GAAL,CAAS,CAAT,EAAY0C,KAAK3C,GAAL,CAAS7E,QAAT,EAAmBwI,YAAY6K,UAAU,CAAtB,CAAnB,CAAZ,CAAX;AACA,iBAAK6F,aAAL,CAAmB1Q,WAAWxI,QAA9B;AACH;;AAED;;;;;;;;;;;sCAQcqK,Q,EAAU;AACpB,iBAAKzE,MAAL,CAAYyE,QAAZ;AACA,iBAAK+M,MAAL,CAAY+B,QAAZ,CAAqB9O,QAArB;AACH;;AAED;;;;;;;;;;;;;+BAUOA,Q,EAAU;AAAA;;AACb,iBAAK/J,SAAL,CAAe,aAAf,EAA8B;AAAA,uBAAM,OAAKsF,MAAL,CAAYyE,QAAZ,CAAN;AAAA,aAA9B;;AAEA,gBAAMmE,SAAS,KAAKuH,OAAL,CAAa9Q,QAAb,EAAf;AACA;AACA,gBAAI,CAACuJ,MAAL,EAAa;AACT,qBAAKuH,OAAL,CAAa5S,KAAb;AACH;AACD;AACA,gBAAMiW,kBAAkB,KAAK3Z,MAAL,CAAY6R,YAApC;AACA,iBAAK7R,MAAL,CAAY6R,YAAZ,GAA2B,KAA3B;AACA,iBAAKyE,OAAL,CAAanQ,MAAb,CAAoByE,WAAW,KAAKpK,WAAL,EAA/B;AACA,iBAAKmX,MAAL,CAAY/M,QAAZ,CAAqB,KAAK0L,OAAL,CAAahW,iBAAb,EAArB;;AAEA,gBAAI,CAACyO,MAAL,EAAa;AACT,qBAAKuH,OAAL,CAAajQ,IAAb;AACH;AACD,iBAAKrG,MAAL,CAAY6R,YAAZ,GAA2B8H,eAA3B;AACA,iBAAK9Y,SAAL,CAAe,MAAf,EAAuB+J,QAAvB;AACH;;AAED;;;;;;;;+BAKO;AACH,iBAAKlH,KAAL;AACA,iBAAKyC,MAAL,CAAY,CAAZ;AACA,iBAAKwR,MAAL,CAAY/M,QAAZ,CAAqB,CAArB;AACH;;AAED;;;;;;;;;kCAMUgP,S,EAAW;AACjB,iBAAKtD,OAAL,CAAauD,SAAb,CAAuBD,SAAvB;AACH;;AAED;;;;;;;;;oCAMa;AACT,mBAAO,KAAKtD,OAAL,CAAawD,SAAb,EAAP;AACH;;AAED;;;;;;;;;;wCAOgBjG,I,EAAM;AAClB,iBAAKyC,OAAL,CAAahU,eAAb,CAA6BuR,IAA7B;AACH;;AAED;;;;;;;;0CAKkB;AACd,mBAAO,KAAKyC,OAAL,CAAayD,eAAb,EAAP;AACH;;AAED;;;;;;;;;;;qCAQa;AACT,iBAAKC,OAAL,CAAa,CAAC,KAAKxC,OAAnB;AACH;;AAED;;;;;;;;;;;gCAQQyC,I,EAAM;AACV;AACA,gBAAIA,SAAS,KAAKzC,OAAlB,EAA2B;AACvB;AACH;;AAED,gBAAIyC,IAAJ,EAAU;AACN;AACA;AACA,qBAAK1C,WAAL,GAAmB,KAAKjB,OAAL,CAAawD,SAAb,EAAnB;AACA,qBAAKxD,OAAL,CAAauD,SAAb,CAAuB,CAAvB;AACA,qBAAKrC,OAAL,GAAe,IAAf;AACH,aAND,MAMO;AACH;AACA;AACA,qBAAKlB,OAAL,CAAauD,SAAb,CAAuB,KAAKtC,WAA5B;AACA,qBAAKC,OAAL,GAAe,KAAf;AACH;AACJ;;AAED;;;;;;;;;kCAMU;AACN,mBAAO,KAAKA,OAAZ;AACH;;AAED;;;;;;;;uCAKe;AACX,iBAAKxX,MAAL,CAAY6R,YAAZ,GAA2B,CAAC,KAAK7R,MAAL,CAAY6R,YAAxC;AACA,iBAAKwG,UAAL;AACH;;AAED;;;;;;;;4CAKoB;AAChB,iBAAKrY,MAAL,CAAYiT,QAAZ,GAAuB,CAAC,KAAKjT,MAAL,CAAYiT,QAApC;AACH;;AAED;;;;;;;;;qCAMa;AACT,gBAAMT,eAAezK,KAAKC,KAAL,CACjB,KAAKxH,WAAL,KAAqB,KAAKR,MAAL,CAAY2W,WAAjC,GAA+C,KAAK3W,MAAL,CAAYiI,UAD1C,CAArB;AAGA,gBAAMwK,cAAc,KAAKkF,MAAL,CAAYjF,QAAZ,EAApB;AACA,gBAAIrJ,QAAQmJ,YAAZ;AACA,gBAAItN,QAAQ,KAAKyS,MAAL,CAAYuC,UAAZ,EAAZ;AACA,gBAAI/U,MAAM4C,KAAK3C,GAAL,CAASF,QAAQuN,WAAjB,EAA8BpJ,KAA9B,CAAV;;AAEA;AACA,gBAAI,KAAKrJ,MAAL,CAAYqN,UAAZ,KAA2B,CAAC,KAAKrN,MAAL,CAAY6R,YAAb,IAA6BW,eAAeC,WAAvE,CAAJ,EAAyF;AACrFpJ,wBAAQoJ,WAAR;AACAvN,wBAAQ,CAAR;AACAC,sBAAMkE,KAAN;AACH;;AAED,gBAAIzH,cAAJ;AACA,gBAAI,KAAK5B,MAAL,CAAY4W,aAAhB,EAA+B;AAC3B,oBAAMuD,YAAY,KAAKvC,SAAL,CAAewC,mBAAf,CAAmC/Q,KAAnC,EAA0CnE,KAA1C,EAAiDC,GAAjD,CAAlB;AACA,oBAAIF,UAAJ;AACA,qBAAKA,IAAI,CAAT,EAAYA,IAAIkV,UAAUnX,MAA1B,EAAkCiC,GAAlC,EAAuC;AACnCrD,4BAAQ,KAAK0U,OAAL,CAAa+D,QAAb,CAAsBhR,KAAtB,EAA6B8Q,UAAUlV,CAAV,EAAa,CAAb,CAA7B,EAA8CkV,UAAUlV,CAAV,EAAa,CAAb,CAA9C,CAAR;AACA,yBAAK0S,MAAL,CAAY2C,SAAZ,CAAsB1Y,KAAtB,EAA6ByH,KAA7B,EAAoC8Q,UAAUlV,CAAV,EAAa,CAAb,CAApC,EAAqDkV,UAAUlV,CAAV,EAAa,CAAb,CAArD;AACH;AACJ,aAPD,MAOO;AACHC,wBAAQ,CAAR;AACAC,sBAAMkE,KAAN;AACAzH,wBAAQ,KAAK0U,OAAL,CAAa+D,QAAb,CAAsBhR,KAAtB,EAA6BnE,KAA7B,EAAoCC,GAApC,CAAR;AACA,qBAAKwS,MAAL,CAAY2C,SAAZ,CAAsB1Y,KAAtB,EAA6ByH,KAA7B,EAAoCnE,KAApC,EAA2CC,GAA3C;AACH;AACD,iBAAKtE,SAAL,CAAe,QAAf,EAAyBe,KAAzB,EAAgCyH,KAAhC;AACH;;AAED;;;;;;;;;;;6BAQKkR,Q,EAAU;AACX,iBAAKva,MAAL,CAAY2W,WAAZ,GAA0B4D,QAA1B;;AAEA,iBAAKva,MAAL,CAAY6R,YAAZ,GAA2B,IAA3B;;AAEA,iBAAKwG,UAAL;AACA,iBAAKV,MAAL,CAAY/M,QAAZ,CAAqB,KAAK0L,OAAL,CAAahW,iBAAb,EAArB;;AAEA,iBAAKqX,MAAL,CAAY+B,QAAZ,CACI,KAAKjZ,cAAL,KAAwB,KAAKD,WAAL,EAD5B;AAGA,iBAAKK,SAAL,CAAe,MAAf,EAAuB0Z,QAAvB;AACH;;AAED;;;;;;;;;wCAMgBvW,W,EAAa;AAAA;;AACzB,iBAAKwW,iBAAL,CAAuBxW,WAAvB,EAAoC,gBAAQ;AACxC,oBAAI,CAAC,OAAK+T,WAAV,EAAuB;AACnB,2BAAK0C,iBAAL,CAAuBpW,IAAvB;AACH;AACJ,aAJD;AAKH;;AAED;;;;;;;;;;0CAOkB9C,M,EAAQ;AACtB,iBAAK+U,OAAL,CAAatG,IAAb,CAAkBzO,MAAlB;AACA,iBAAK8W,UAAL;AACA,iBAAKxX,SAAL,CAAe,OAAf;AACA,iBAAKmX,OAAL,GAAe,IAAf;AACH;;AAED;;;;;;;;;iCAMS0C,I,EAAM;AAAA;;AACX;AACA,gBAAMC,SAAS,IAAIC,UAAJ,EAAf;AACAD,mBAAO1K,gBAAP,CAAwB,UAAxB,EAAoC;AAAA,uBAAK,QAAK4K,UAAL,CAAgBhU,CAAhB,CAAL;AAAA,aAApC;AACA8T,mBAAO1K,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,uBAAK,QAAK6K,eAAL,CAAqBjU,EAAE8M,MAAF,CAASoH,MAA9B,CAAL;AAAA,aAAhC;AACAJ,mBAAO1K,gBAAP,CAAwB,OAAxB,EAAiC;AAAA,uBAAM,QAAKpP,SAAL,CAAe,OAAf,EAAwB,oBAAxB,CAAN;AAAA,aAAjC;AACA8Z,mBAAOK,iBAAP,CAAyBN,IAAzB;AACA,iBAAKtC,KAAL;AACH;;AAED;;;;;;;;;;;;;;;;;;;;;;6BAmBK9I,G,EAAK1N,K,EAAO2N,O,EAAS;AACtB,iBAAK6I,KAAL;AACA,iBAAKZ,OAAL,GAAe,KAAf;;AAEA,oBAAQ,KAAKxX,MAAL,CAAYsW,OAApB;AACI,qBAAK,UAAL;AAAiB,2BAAO,KAAK2E,UAAL,CAAgB3L,GAAhB,EAAqB1N,KAArB,CAAP;AACjB,qBAAK,cAAL;AAAqB,2BAAO,KAAKsZ,gBAAL,CAAsB5L,GAAtB,EAA2B1N,KAA3B,EAAkC2N,OAAlC,CAAP;AAFzB;AAIH;;AAED;;;;;;;;;;mCAOWD,G,EAAK1N,K,EAAO;AAAA;;AACnB,gBAAMoO,OAAO,SAAPA,IAAO,SAAU;AACnB,oBAAImL,MAAJ,EAAY;AACR,4BAAK1D,SAAL,CAAe/Q,IAAf,CAAoB,QAAK0U,IAAL,CAAU,OAAV,EAAmBD,MAAnB,CAApB;AACH;AACD,uBAAO,QAAKE,cAAL,CAAoB/L,GAApB,EAAyB,UAACjL,IAAD;AAAA,2BAAU,QAAKyW,eAAL,CAAqBzW,IAArB,CAAV;AAAA,iBAAzB,CAAP;AACH,aALD;;AAOA,gBAAIzC,KAAJ,EAAW;AACP,qBAAK0U,OAAL,CAAagF,QAAb,CAAsB1Z,KAAtB;AACA,qBAAKyW,UAAL;AACA,qBAAKZ,SAAL,CAAe/Q,IAAf,CAAoB,KAAK0U,IAAL,CAAU,aAAV,EAAyBpL,IAAzB,CAApB;AACH,aAJD,MAIO;AACH,uBAAOA,MAAP;AACH;AACJ;;AAED;;;;;;;;;;;;;;yCAWiBuL,Q,EAAU3Z,K,EAAO2N,O,EAAS;AAAA;;AACvC,gBAAID,MAAMiM,QAAV;;AAEA,gBAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,qBAAKjF,OAAL,CAAatG,IAAb,CAAkBV,GAAlB,EAAuB,KAAKoH,cAA5B,EAA4C9U,KAA5C,EAAmD2N,OAAnD;AACH,aAFD,MAEO;AACH,oBAAMQ,MAAMwL,QAAZ;AACA,qBAAKjF,OAAL,CAAakF,OAAb,CAAqBzL,GAArB,EAA0BnO,KAA1B;;AAEA;AACA;AACA0N,sBAAMS,IAAIJ,GAAV;AACH;;AAED,iBAAK8H,SAAL,CAAe/Q,IAAf,CACI,KAAK4P,OAAL,CAAa8E,IAAb,CAAkB,SAAlB,EAA6B,YAAM;AAC/B,wBAAK/C,UAAL;AACA,wBAAKxX,SAAL,CAAe,OAAf;AACH,aAHD,CADJ,EAKI,KAAKyV,OAAL,CAAa8E,IAAb,CAAkB,OAAlB,EAA2B;AAAA,uBAAO,QAAKva,SAAL,CAAe,OAAf,EAAwB4a,GAAxB,CAAP;AAAA,aAA3B,CALJ;;AAQA;AACA;AACA;AACA,gBAAI7Z,KAAJ,EAAW;AACP,qBAAK0U,OAAL,CAAagF,QAAb,CAAsB1Z,KAAtB;AACH;;AAED,gBAAI,CAAC,CAACA,KAAD,IAAU,KAAK5B,MAAL,CAAYwW,WAAvB,KAAuC,KAAKF,OAAL,CAAagD,gBAAb,EAA3C,EAA4E;AACxE,qBAAK+B,cAAL,CAAoB/L,GAApB,EAAyB,uBAAe;AACpC,4BAAKkL,iBAAL,CAAuBxW,WAAvB,EAAoC,kBAAU;AAC1C,gCAAKsS,OAAL,CAAa/U,MAAb,GAAsBA,MAAtB;AACA,gCAAK+U,OAAL,CAAagF,QAAb,CAAsB,IAAtB;AACA,gCAAKjD,UAAL;AACA,gCAAKxX,SAAL,CAAe,gBAAf;AACH,qBALD;AAMH,iBAPD;AAQH;AACJ;;AAED;;;;;;;;;;0CAOkBmD,W,EAAaC,Q,EAAU;AAAA;;AACrC,iBAAKD,WAAL,GAAmBA,WAAnB;;AAEA,iBAAKsS,OAAL,CAAakE,iBAAb,CACIxW,WADJ,EAEI,gBAAQ;AACJ;AACA;AACA,oBAAI,CAAC,QAAK+T,WAAN,IAAqB,QAAK/T,WAAL,IAAoBA,WAA7C,EAA0D;AACtDC,6BAASI,IAAT;AACA,4BAAKL,WAAL,GAAmB,IAAnB;AACH;AACJ,aATL,EAUI;AAAA,uBAAM,QAAKnD,SAAL,CAAe,OAAf,EAAwB,4BAAxB,CAAN;AAAA,aAVJ;AAYH;;AAED;;;;;;;;;;uCAOeyO,G,EAAKrL,Q,EAAU;AAAA;;AAC1B,gBAAMkQ,OAAOhV,KAAKgV,IAAL,CAAU;AACnB7E,qBAAKA,GADc;AAEnBqF,8BAAc;AAFK,aAAV,CAAb;;AAKA,iBAAK+C,WAAL,GAAmBvD,IAAnB;;AAEA,iBAAKsD,SAAL,CAAe/Q,IAAf,CACIyN,KAAKhN,EAAL,CAAQ,UAAR,EAAoB,aAAK;AACrB,wBAAK0T,UAAL,CAAgBhU,CAAhB;AACH,aAFD,CADJ,EAIIsN,KAAKhN,EAAL,CAAQ,SAAR,EAAmB,UAAC9C,IAAD,EAAOwC,CAAP,EAAa;AAC5B5C,yBAASI,IAAT;AACA,wBAAKqT,WAAL,GAAmB,IAAnB;AACH,aAHD,CAJJ,EAQIvD,KAAKhN,EAAL,CAAQ,OAAR,EAAiB,aAAK;AAClB,wBAAKtG,SAAL,CAAe,OAAf,EAAwB,gBAAgBgG,EAAE8M,MAAF,CAAS+H,UAAjD;AACA,wBAAKhE,WAAL,GAAmB,IAAnB;AACH,aAHD,CARJ;;AAcA,mBAAOvD,IAAP;AACH;;AAED;;;;;;;;;;mCAOWtN,C,EAAG;AACV,gBAAI8U,wBAAJ;AACA,gBAAI9U,EAAE+N,gBAAN,EAAwB;AACpB+G,kCAAkB9U,EAAEgO,MAAF,GAAWhO,EAAEiO,KAA/B;AACH,aAFD,MAEO;AACH;AACA;AACA6G,kCAAkB9U,EAAEgO,MAAF,IAAYhO,EAAEgO,MAAF,GAAW,OAAvB,CAAlB;AACH;AACD,iBAAKhU,SAAL,CAAe,SAAf,EAA0BkH,KAAKC,KAAL,CAAW2T,kBAAkB,GAA7B,CAA1B,EAA6D9U,EAAE8M,MAA/D;AACH;;AAED;;;;;;;;;;;;;;kCAWU3Q,M,EAAQ4Y,Q,EAAUC,Q,EAAU3W,K,EAAO;AACzClC,qBAASA,UAAU,IAAnB;AACAkC,oBAAQA,SAAS,CAAjB;AACA0W,uBAAWA,YAAY,KAAvB;AACAC,uBAAWA,YAAY,KAAvB;AACA,gBAAMja,QAAQ,KAAK0U,OAAL,CAAa+D,QAAb,CAAsBrX,MAAtB,EAA8BkC,KAA9B,CAAd;AACA,gBAAM8L,MAAM,GAAGrC,GAAH,CAAO9L,IAAP,CAAYjB,KAAZ,EAAmB;AAAA,uBAAOmG,KAAKC,KAAL,CAAW8D,MAAM8P,QAAjB,IAA6BA,QAApC;AAAA,aAAnB,CAAZ;AACA,gBAAME,OAAOC,KAAKC,SAAL,CAAehL,GAAf,CAAb;AACA,gBAAI,CAAC6K,QAAL,EAAe;AACXrc,uBAAOiV,IAAP,CAAY,yCACRwH,mBAAmBH,IAAnB,CADJ;AAEH;AACD,mBAAOA,IAAP;AACH;;AAED;;;;;;;;;;;;;oCAUYI,M,EAAQzN,O,EAAS;AACzB,gBAAI,CAACyN,MAAL,EAAa;AACTA,yBAAS,WAAT;AACH;AACD,gBAAI,CAACzN,OAAL,EAAc;AACVA,0BAAU,CAAV;AACH;;AAED,mBAAO,KAAKkJ,MAAL,CAAYwE,QAAZ,CAAqBD,MAArB,EAA6BzN,OAA7B,CAAP;AACH;;AAED;;;;;;qCAGa;AACT,gBAAI,KAAKiJ,WAAT,EAAsB;AAClB,qBAAKA,WAAL,CAAiBpD,GAAjB,CAAqB8H,KAArB;AACA,qBAAK1E,WAAL,GAAmB,IAAnB;AACH;AACJ;;AAED;;;;;;yCAGiB;AACb,iBAAKD,SAAL,CAAehV,OAAf,CAAuB;AAAA,uBAAKoE,EAAED,EAAF,EAAL;AAAA,aAAvB;AACH;;AAED;;;;;;gCAGQ;AACJ,gBAAI,CAAC,KAAK0P,OAAL,CAAa9Q,QAAb,EAAL,EAA8B;AAC1B,qBAAKQ,IAAL;AACA,qBAAKsQ,OAAL,CAAa5Q,gBAAb;AACH;AACD,iBAAK2W,UAAL;AACA,iBAAKC,cAAL;AACA,iBAAK3E,MAAL,CAAY/M,QAAZ,CAAqB,CAArB;AACA,iBAAK+M,MAAL,CAAYxE,QAAZ,CAAqB,CAArB;AACA,iBAAKwE,MAAL,CAAY2C,SAAZ,CAAsB,EAAEtX,QAAQ,KAAK2U,MAAL,CAAYjF,QAAZ,EAAV,EAAtB,EAA0D,CAA1D;AACH;;AAED;;;;;;;;kCAKU;AACN,iBAAK6J,iBAAL;AACA,iBAAK1b,SAAL,CAAe,SAAf;AACA,iBAAKwb,UAAL;AACA,iBAAKC,cAAL;AACA,iBAAK7W,KAAL;AACA,gBAAI,KAAKzF,MAAL,CAAYmX,UAAhB,EAA4B;AACxB3X,uBAAOgd,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtE,SAA1C,EAAqD,IAArD;AACH;AACD,iBAAK5B,OAAL,CAAa+C,OAAb;AACA,iBAAK1B,MAAL,CAAY0B,OAAZ;AACA,iBAAKtB,WAAL,GAAmB,IAAnB;AACA,iBAAK/T,WAAL,GAAmB,IAAnB;AACH;;;;EAljCmC7E,KAAKmH,Q;;AAAxB6P,U,CAwEVhX,I,GAAOA,I;kBAxEGgX,U;;;;;;;ACvKrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 450cb6648dbf9ab78169","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/index.js","import * as util from './util';\n\n// using consts to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256\n    /** @private */\n    audioContext = null\n    /** @private */\n    offlineAudioContext = null\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return (this.getCurrentTime() / duration) || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return (this.getCurrentTime() / duration) || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    }\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean}\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext}\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (\n                window.AudioContext || window.webkitAudioContext\n            );\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate\n     * @return {OfflineAudioContext}\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (\n                window.OfflineAudioContext || window.webkitOfflineAudioContext\n            )(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac = params.audioContext || this.getAudioContext();\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters.reduce((prev, curr) => {\n                prev.connect(curr);\n                return curr;\n            }, this.analyser).connect(this.gainNode);\n        }\n\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.ac.createScriptProcessor) {\n            this.scriptNode = this.ac.createScriptProcessor(WebAudio.scriptBufferSize);\n        } else {\n            this.scriptNode = this.ac.createJavaScriptNode(WebAudio.scriptBufferSize);\n        }\n\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.value = value;\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /** @private */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100);\n        }\n        this.offlineAc.decodeAudioData(arraybuffer, data => callback(data), errback);\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {Array} peaks\n     */\n    setPeaks(peaks) {\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     *\n     * @param {number} length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == ((2 * this.mergedPeaks.length - 1) + 2)) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) { return this.peaks; }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (typeof this.ac.close === 'function') {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        //adjust for old browsers.\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}}\n     */\n    seekTo(start, end) {\n        if (!this.buffer) { return; }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number}\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) { return; }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n    * Returns the current time in seconds relative to the audioclip's\n    * duration.\n    *\n    * @return {number}\n    */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n    * Returns the current playback rate. (0=no playback, 1=normal playback)\n    *\n    * @return {number}\n    */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webaudio.js","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor}\n     */\n    on(event, fn) {\n        if (!this.handlers) { this.handlers = {}; }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) { return; }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor}\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) { return; }\n        const handlers = this.handlers[event];\n        handlers && handlers.forEach(fn => {\n            fn(...args);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/observer.js","/**\n * Returns the requestAnimationFrame function for the browser, or a shim with\n * setTimeout if none is found\n *\n * @return {function}\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request-animation-frame.js","import Drawer from './drawer';\nimport * as util from './util';\n\n/**\n * @typedef {Object} CanvasEntry\n * @private\n * @property {HTMLElement} wave The wave node\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\n * @property {?HTMLElement} progress The progress wave node\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\n * rendering context\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\n * @property {?number} end End of the area the canvas should render, between 0 and 1\n */\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\n * in renderer.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n\n        /**\n         * Whether or not the progress wave is renderered. If the `waveColor`\n         * and `progressColor` are the same colour it is not.\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n        /** @private */\n        this.progressWave = null;\n    }\n\n    /**\n     * Initialise the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor,\n                pointerEvents: 'none'\n            })\n        );\n\n        this.addCanvas();\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth);\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        this.canvases.forEach((entry, i) => {\n            // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n            let canvasWidth = this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\n\n            if (i == this.canvases.length - 1) {\n                canvasWidth = this.width - (this.maxCanvasWidth * (this.canvases.length - 1));\n            }\n\n            this.updateDimensions(entry, canvasWidth, this.height);\n            this.clearWaveForEntry(entry);\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = {};\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        entry.wave = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%',\n                pointerEvents: 'none'\n            })\n        );\n        entry.waveCtx = entry.wave.getContext('2d');\n\n        if (this.hasProgressCanvas) {\n            entry.progress = this.progressWave.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                })\n            );\n            entry.progressCtx = entry.progress.getContext('2d');\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop one canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        const lastEntry = this.canvases.pop();\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n        entry.start = (entry.waveCtx.canvas.offsetLeft / totalWidth) || 0;\n        entry.end = entry.start + elementWidth / totalWidth;\n\n        entry.waveCtx.canvas.width = width;\n        entry.waveCtx.canvas.height = height;\n        this.style(entry.waveCtx.canvas, { width: elementWidth + 'px'});\n\n        this.style(this.progressWave, { display: 'block'});\n\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.canvas.width = width;\n            entry.progressCtx.canvas.height = height;\n            this.style(entry.progressCtx.canvas, { width: elementWidth + 'px'});\n        }\n    }\n\n    /**\n     * Clear the whole waveform\n     */\n    clearWave() {\n        this.canvases.forEach(entry => this.clearWaveForEntry(entry));\n    }\n\n    /**\n     * Clear one canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    clearWaveForEntry(entry) {\n        entry.waveCtx.clearRect(0, 0, entry.waveCtx.canvas.width, entry.waveCtx.canvas.height);\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.clearRect(0, 0, entry.progressCtx.canvas.width, entry.progressCtx.canvas.height);\n        }\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        util.frame((peaks, channelIndex, start, end) => {\n            // Split channels\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                    channels.forEach((channelPeaks, i) => this.drawBars(channelPeaks, i, start, end));\n                    return;\n                }\n                peaks = channels[0];\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            // Skip every other value if there are negatives.\n            const peakIndexScale = hasMinVals ? 2 : 1;\n\n            // A half-pixel offset makes lines crisp\n            const width = this.width;\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n            const length = peaks.length / peakIndexScale;\n            const bar = this.params.barWidth * this.params.pixelRatio;\n            const gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n            const step = bar + gap;\n\n            let absmax = 1;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            const scale = length / width;\n            let i;\n\n            for (i = (start / scale); i < (end / scale); i += step) {\n                const peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                const h = Math.round(peak / absmax * halfH);\n                this.fillRect(i + this.halfPixel, halfH - h + offsetY, bar + this.halfPixel, h * 2);\n            }\n\n        });\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        util.frame((peaks, channelIndex, start, end) => {\n            // Split channels\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                    channels.forEach((channelPeaks, i) => this.drawWave(channelPeaks, i, start, end));\n                    return;\n                }\n                peaks = channels[0];\n            }\n\n            // Support arrays without negative peaks\n            const hasMinValues = [].some.call(peaks, val => val < 0);\n            if (!hasMinValues) {\n                const reflectedPeaks = [];\n                const len = peaks.length;\n                let i;\n                for (i = 0; i < len; i++) {\n                    reflectedPeaks[2 * i] = peaks[i];\n                    reflectedPeaks[2 * i + 1] = -peaks[i];\n                }\n                peaks = reflectedPeaks;\n            }\n\n            // A half-pixel offset makes lines crisp\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n\n            let absmax = 1;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n\n            // Always draw a median line\n            this.fillRect(0, halfH + offsetY - this.halfPixel, this.width, this.halfPixel);\n        });\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peak data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            this.drawLineToContext(entry, entry.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n            this.drawLineToContext(entry, entry.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Render the actual waveform line on a canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\n     * @param {number[]} peaks\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) { return; }\n\n        const length = peaks.length / 2;\n        const scale = (this.params.fillParent && this.width != length)\n          ? this.width / length\n          : 1;\n\n        const first = Math.round(length * entry.start);\n        // Use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas.\n        const last = Math.round(length * entry.end) + 1;\n        if (first > end || last < start) { return; }\n        const canvasStart = Math.max(first, start);\n        const canvasEnd = Math.min(last, end);\n        let i;\n        let j;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale + this.halfPixel, halfH + offsetY);\n\n        for (i = canvasStart; i < canvasEnd; i++) {\n            const peak = peaks[2 * i] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        // Draw the bottom edge going backwards, to make a single\n        // closed hull to fill.\n        for (j = canvasEnd - 1; j >= canvasStart; j--) {\n            const peak = peaks[2 * j + 1] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Draw a rectangle on the waveform\n     *\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n          Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n          this.canvases.length\n        );\n        let i;\n        for (i = startCanvas; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(x + width, i * this.maxCanvasWidth + entry.waveCtx.canvas.width),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                this.fillRectToContext(entry.waveCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n\n                this.fillRectToContext(entry.progressCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n            }\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a canvas\n     *\n     * @private\n     * @param {Canvas2DContextAttributes} ctx\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) { return; }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    setFillStyles(entry) {\n        entry.waveCtx.fillStyle = this.params.waveColor;\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.fillStyle = this.params.progressColor;\n        }\n    }\n\n    /**\n     * Return image data of the waveform\n     *\n     * @param {string} type='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @return {string|string[]} images A data URL or an array of data URLs\n     */\n    getImage(type, quality) {\n        const images = this.canvases.map(entry => entry.wave.toDataURL(type, quality));\n        return images.length > 1 ? images : images[0];\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.multicanvas.js","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {}\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) { return; }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            const requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n            requestAnimationFrame(onAudioProcess);\n        };\n\n        this.on('play', onAudioProcess);\n    }\n\n    /**\n     *  Create media element with url as its source,\n     *  and append to container element.\n     *\n     *  @param {string} url Path to media file\n     *  @param {HTMLElement} container HTML element\n     *  @param {Array} peaks Array of peak data\n     *  @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     *  Load existing media element.\n     *\n     *  @param {MediaElement} elt HTML5 Audio or Video element\n     *  @param {Array} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     *  Private method called by both load (from url)\n     *  and loadElt (existing media element).\n     *\n     *  @param  {MediaElement}  media     HTML5 Audio or Video element\n     *  @param  {Array}         peaks   array of peak data\n     *  @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        // Listen to and relay play and pause events to enable\n        // playback control from the external media element\n        media.addEventListener('play', () => {\n            this.fireEvent('play');\n        });\n\n        media.addEventListener('pause', () => {\n            this.fireEvent('pause');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) { // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n    * Returns the current time in seconds relative to the audioclip's\n    * duration.\n    *\n    * @return {number}\n    */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return (this.getCurrentTime() / this.getDuration()) || 0;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {Number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {Number} end When to stop relative to the beginning of a clip.\n     * @emits MediaElement#play\n     */\n    play(start, end) {\n        this.seekTo(start);\n        this.media.play();\n        end && this.setPlayEnd(end);\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     */\n    pause() {\n        this.media && this.media.pause();\n        this.clearPlayEnd();\n    }\n\n    /** @private */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.media.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.media.volume = value;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.media && this.media.parentNode && this.media.parentNode.removeChild(this.media);\n        this.media = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mediaelement.js","/**\n * Caches the decoded peaks data to improve rendering speed for lage audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {number[][]}\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges.sort((a, b) => a - b).filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i+1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {number[][]}\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i+1]]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/peakcache.js","import * as util from './util';\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = ((clientX - bbox.left) * this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress = ((clientX - bbox.left + this.wrapper.scrollLeft) / this.wrapper.scrollWidth) || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight = this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e => this.fireEvent('scroll', e));\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth ?\n            this.drawBars(peaks, 0, start, end) :\n            this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the viewport at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the viewport on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number}\n     */\n    getScrollX() {\n        return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number}\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be renderered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.js","import Observer from './observer';\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nexport default function ajax (options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ajax.js"," /**\n  * Extend an object shallowly with others\n  *\n  * @param {Object} dest The target object\n  * @param {Object[]} sources The objects to use for extending\n  *\n  * @return {Object} Merged object\n  */\nexport default function extend (dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/extend.js","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame (func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/frame.js","/**\n * Get a random prefixed ID\n *\n * @returns {String} Random ID\n */\nexport default function getId () {\n    return 'wavesurfer_' + Math.random().toString(32).substring(2);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/get-id.js","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n */\nexport default function max (values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/max.js","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number}       Smallest number found\n */\nexport default function min (values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/min.js","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style (el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/style.js","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with seperate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {Object} params={} The plugin params (specific to the plugin)\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} ws The wavesurfer instance\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    constructor(ws, params) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext  : null,\n        audioRate     : 1,\n        autoCenter    : true,\n        backend       : 'WebAudio',\n        container     : null,\n        cursorColor   : '#333',\n        cursorWidth   : 1,\n        dragSelection : true,\n        fillParent    : true,\n        forceDecode   : true,\n        height        : 128,\n        hideScrollbar : false,\n        interact      : true,\n        loopSelection : true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls : false,\n        mediaType     : 'audio',\n        minPxPerSec   : 20,\n        normalize     : false,\n        partialRender : false,\n        pixelRatio    : window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins       : [],\n        progressColor : '#555',\n        renderer      : MultiCanvas,\n        responsive    : false,\n        scrollParent  : false,\n        skipLength    : 2,\n        splitChannels : false,\n        waveColor     : '#999'\n    }\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    }\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this}\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container = 'string' == typeof params.container ?\n            document.querySelector(this.params.container) :\n            this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(this.params.mediaContainer);\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * cancelled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentAjax = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n        /** @private */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(() => {\n            if (prevWidth != this.drawer.wrapper.clientWidth) {\n                prevWidth = this.drawer.wrapper.clientWidth;\n                this.empty();\n                this.drawBuffer();\n            }\n        }, typeof this.params.responsive === 'number' ? this.params.responsive : 100);\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this}\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this}\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this}\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(`Plugin ${plugin.name} does not have an instance property!`);\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this}\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this}\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet and cannot be destroyed!`);\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(`Plugin ${name} is not active and cannot be destroyed!`);\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name => this.destroyPlugin(name));\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive) {\n            window.addEventListener('resize', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (this.params.backend == 'WebAudio' && !this.Backend.prototype.supportsWebAudio.call(null)) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => this.fireEvent('finish'));\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {Number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (this.getDuration() >= seconds) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds/this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        this.backend.play(start, end);\n    }\n\n    /**\n     * Stops playback\n     *\n     * @example wavesurfer.pause();\n     */\n    pause() {\n        this.backend.isPaused() || this.backend.pause();\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     */\n    playPause() {\n        this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume () {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. It not currenly muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n        }\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean}\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the correct peaks for current wave viewport and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        let start = this.drawer.getScrollX();\n        let end = Math.min(start + parentWidth, width);\n\n        // Fill container\n        if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n            }\n        } else {\n            start = 0;\n            end = width;\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option.\n     *\n     * @param {number} pxPerSec Number of horizontal pixels per second of audio\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        this.params.minPxPerSec = pxPerSec;\n\n        this.params.scrollParent = true;\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(\n            this.getCurrentTime() / this.getDuration()\n        );\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e => this.loadArrayBuffer(e.target.result));\n        reader.addEventListener('error', () => this.fireEvent('error', 'Error reading file'));\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string} url The url of the audio file\n     * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode the audio to\n     * render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @example\n     * // using ajax or media element to load (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * peaks wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true,\n     * );\n     */\n    load(url, peaks, preload) {\n        this.empty();\n        this.isMuted = false;\n\n        switch (this.params.backend) {\n            case 'WebAudio': return this.loadBuffer(url, peaks);\n            case 'MediaElement': return this.loadMediaElement(url, peaks, preload);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url\n     * @param {?number[]|number[][]} peaks\n     */\n    loadBuffer(url, peaks) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, (data) => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     */\n    loadMediaElement(urlOrElt, peaks, preload) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks);\n        }\n\n        if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer\n     * @param {function} callback\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer by ajax and pass to a callback\n     *\n     * @param {string} url\n     * @param {function} callback\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        const ajax = util.ajax({\n            url: url,\n            responseType: 'arraybuffer'\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', e => {\n                this.onProgress(e);\n            }),\n            ajax.on('success', (data, e) => {\n                callback(data);\n                this.currentAjax = null;\n            }),\n            ajax.on('error', e => {\n                this.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                this.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {JSON} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start);\n        const arr = [].map.call(peaks, val => Math.round(val * accuracy) / accuracy);\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open('data:application/json;charset=utf-8,' +\n                encodeURIComponent(json));\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png'\n     * @param {number} quality=1\n     * @return {string} data URI of image\n     */\n    exportImage(format, quality) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n\n        return this.drawer.getImage(format, quality);\n    }\n\n    /**\n     * Cancel any ajax request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive) {\n            window.removeEventListener('resize', this._onResize, true);\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.arraybuffer = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/wavesurfer.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debounce/index.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}